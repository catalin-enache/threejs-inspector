:root {
  --tp-base-background-opacity: 0.41;
  --tp-base-background-color: hsla(0, 0%, 10%, var(--tp-base-background-opacity));
  --tp-base-background-color-no-opacity: hsla(0, 0%, 10%, 1);
  --tp-base-shadow-color: hsla(0, 0%, 0%, 0.2);
  --tp-base-border-radius: 0px;
  --tp-blade-border-radius: 0px;
  --bld-br: 0px;
  --tp-button-background-color: hsla(0, 0%, 80%, 1);
  --tp-button-background-color-active: hsla(0, 0%, 100%, 1);
  --tp-button-background-color-focus: hsla(0, 0%, 95%, 1);
  --tp-button-background-color-hover: hsla(0, 0%, 85%, 1);
  --tp-button-foreground-color: hsla(0, 0%, 0%, 0.8);
  --tp-container-background-color: hsla(0, 0%, 0%, 0.2);
  --tp-container-background-color-active: hsla(0, 0%, 0%, 0.2);
  --tp-container-background-color-focus: hsla(0, 0%, 0%, 0.2);
  --tp-container-background-color-hover: hsla(0, 0%, 0%, 0.2);
  --tp-container-foreground-color: hsla(0, 0%, 100%, 0.8);
  --tp-groove-foreground-color: hsla(0, 0%, 0%, 0.8);
  --tp-input-background-color: hsla(0, 3%, 34%, 0.2);
  --tp-input-background-color-active: hsla(0, 0%, 0%, 0.2);
  --tp-input-background-color-focus: hsla(0, 0%, 0%, 0.2);
  --tp-input-background-color-hover: hsla(0, 3%, 34%, 0.3);
  --tp-input-foreground-color: hsla(0, 0%, 100%, 0.8);
  --tp-label-foreground-color: hsla(0, 0%, 100%, 0.8);
  --tp-monitor-background-color: hsla(0, 0%, 0%, 0.2);
  --tp-monitor-foreground-color: hsla(0, 0%, 100%, 0.8);
  --tp-base-font-family: Roboto Mono, Source Code Pro, Menlo, Courier, monospace;
}


/* overriding host start >> */
body * {
  /* needed for correct display of CPanel help */
  box-sizing: border-box;
}

html, body {
  margin: 0;
  padding: 0;
  overflow: hidden;
  -webkit-user-select: none; /* Safari */
  -ms-user-select: none; /* IE 10 and IE 11 */
  user-select: none; /* Standard syntax */
}
/* << overriding host end */

#controlPanel {
  --cPanelNestingOffset: 10px; /* account for cPane Global tab initial nesting */
  --cPanelWidth: 340px;
  --cPanelRightMargin: 10px;
  --leftRightMargin: calc(var(--cPanelRightMargin) * 2);
  --cPanelFinalWidth: min(calc(var(--cPanelWidth) + var(--cPanelNestingOffset)), 100vw - var(--leftRightMargin));
  position: absolute;
  top: 10px;
  right: var(--cPanelRightMargin);
  width: var(--cPanelFinalWidth);
  display: none; /* overridden with inline style in CPanel */

  font-family: var(--tp-base-font-family);
  line-height: 1.5;
  font-weight: 400;
  font-size: 16px;

  color: var(--tp-container-foreground-color);

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: transparent;
  z-index: 99990; /* 1 is enough but if used in other apps we need to be sure is on top of everything */
}

#dragMe {
  background-color: var(--tp-base-background-color);
  height: 8px
}

#help {
  --helpWidth: calc(100vw - var(--cPanelFinalWidth) - var(--leftRightMargin));
  position: absolute;
  top: 0;
  right: 100%;
  width: var(--helpWidth);
  height: 100%;
  background-color: var(--tp-base-background-color);
  display: none;
  overflow-y: scroll;
  padding: min(16px, calc(var(--helpWidth) * 0.035));
}

#help code {
  font-weight: bold;
  font-size: 16px;
  color: orange;
}

/* make controlPanelContent scrollable */
#controlPanelContent {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  max-height: calc(100vh - 26px);
  /*
  Using overflow-y: scroll makes this container hide children positioned outside it
  even on x coord (browser behaviour)
  Fixed with JS at runtime (see later in this file)
  */
  overflow-y: scroll;
}
/* attempt to improve aliasing */
#controlPanelContent > div {
  transform: translateZ(0);
}

/*
Here, we allow draggable input control to be displayed when dragged outside the panel
in combination with JS pointerdown event in charge with setting .cPanel-mousedown class
and in charge with shifting position according with last scrollTop value
*/
#controlPanelContent.cPanel-mousedown {
  overflow-y: clip;
}

/* hide scrollbar */
#controlPanelContent::-webkit-scrollbar,
#help::-webkit-scrollbar {
  display: none;
}
#controlPanelContent,
#help {
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}

/* make cPanel full width of container */
#controlPanelContent > div {
  width: 100%;
}

/* add label ellipsis and allow it be expanded even when input is disabled */
#controlPanelContent .binding-label {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  /* allow expansion for disabled inputs */
  pointer-events: all;
}

#controlPanelContent .binding .binding-label:hover + div {
  transition: width 0.0001s, opacity 0.0001s !important;
  transition-delay: 0.35s !important;
}

/* allow expanding labels by shrinking value containers */
#controlPanelContent:not(.cPanel-mousedown) .binding .binding-label:hover + div {
  width: 0;
  opacity: 0;
}

/* make values bigger to fit Vector4 value */
#controlPanelContent .binding-value {
  width: 240px;
}

/* prevent animation buttons text being ugly displayed */
#controlPanelContent .binding-value button > div {
  padding-left: 6px;
  padding-right: 6px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

#controlPanelContent .binding-value input:disabled {
  /* so that we can click on it, then shift the text with keyboard left/right arrows */
  pointer-events: all;
}

/* hint that tabs are clickable */
#controlPanelContent .cPanel-tab > button > div {
  cursor: pointer;
}

#controlPanelContent input[type="checkbox"] ~ div {
  border: 1px solid #ccc;
  opacity: 0.2;
}

/* adjusting separator color */
#controlPanelContent div > hr {
  background-color: var(--tp-container-background-color);
}

/*
make panel reconstruction unobservable
transition 0 introduces a bug which is fixed in bindings
by dispatching "transitionend" event which it seams that Tweakpane relies on
*/
#controlPanelContent  * {
  transition: none !important;
  text-transform: none;
}

#controlPanelContent .outlinerSearch {
  padding: 0 26px;
}

/* removing overall shadow visible on CPanel mousedown */
#controlPanelContent .tp-rotv {
  box-shadow: none;
}

/* fix cubicBezier gradation */
#controlPanelContent .tp-cbzprvv {
  padding: 0;
}



