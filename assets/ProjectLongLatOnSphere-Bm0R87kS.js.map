{"version":3,"file":"ProjectLongLatOnSphere-Bm0R87kS.js","sources":["../../src/lib/utils/projectLongLatOnSphere.ts","../../demo/scenarios/ProjectLongLatOnSphere.tsx"],"sourcesContent":["/*\nWhy This Formula Works\nThe formula leverages trigonometry to project the spherical coordinates onto a 3D unit sphere. Here's how:\n\nLatitude (theta) Affects Vertical Position (y):\nThe cosine of the latitude determines how \"high\" or \"low\" the point is on the sphere.\n\nLongitude (phi) Affects Horizontal Position (x and z):\nThe sine and cosine of the longitude control the direction around the equator (x,z plane).\n\nCombined Effect:\nThe sine of the latitude adjusts the influence of the longitude on the horizontal plane (x and z).\n*/\nexport const projectLongLatOnSphere = ({\n  x: longitude /* equator 0 ... 2PI (phi) */,\n  y: latitude /* poles 0 ... PI (theta) */,\n  r: radius\n}: {\n  x: number;\n  y: number;\n  r: number;\n}) => {\n  return [\n    Math.sin(latitude) * Math.sin(longitude), // X\n    Math.cos(latitude), // Y\n    Math.sin(latitude) * Math.cos(longitude) // Z\n  ].map((coord) => coord * radius) as [number, number, number];\n};\n","import * as THREE from 'three';\nimport { useEffect, useRef, useState } from 'react';\nimport { useThree } from '@react-three/fiber';\n// @ts-ignore\nimport { CustomControl } from 'src/components/CustomControl/CustomControl';\n// import { usePlay } from 'src/lib/hooks';\nimport { projectLongLatOnSphere } from 'src/lib/utils/projectLongLatOnSphere';\nimport { useStats } from 'lib/hooks';\nimport { api } from 'src';\n\nconst radius = 10;\nconst initialDirection = { x: 0, y: 1.6 };\n\nexport function ProjectLongLatOnSphere() {\n  const [direction, setDirection] = useState(projectLongLatOnSphere({ ...initialDirection, r: radius }));\n  const { scene, camera } = useThree();\n  useStats();\n\n  useEffect(() => {\n    // because R3F adds geometry asynchronously, after internal setup\n    api.updateSceneBBox();\n    // Set up the scene\n    scene.background = new THREE.Color().setHex(0x000000);\n    return () => {\n      scene.background = null;\n    };\n  }, [scene]);\n\n  useEffect(() => {\n    camera.position.set(0, 0, 22);\n    camera.rotation.set(0, 0, 0);\n    if (camera instanceof THREE.OrthographicCamera) {\n      camera.zoom = 30;\n    }\n  }, [camera]);\n\n  const customPropsRef = useRef({\n    direction: initialDirection\n  });\n\n  // usePlay((_state, _delta) => {});\n\n  return (\n    <>\n      <group name=\"lights group\">\n        <ambientLight color={'#ffffff'} intensity={3.5} position={[0, 1, 0]} />\n      </group>\n\n      <mesh name=\"sphere\">\n        <sphereGeometry args={[10, 32, 32]} />\n        <meshStandardMaterial color={'#ffffff'} wireframe />\n      </mesh>\n\n      <mesh position={direction} name=\"projection\" __inspectorData={{ isInspectable: true }}>\n        <sphereGeometry args={[1, 32, 32]} />\n        <meshStandardMaterial color={'#ff0000'} />\n      </mesh>\n\n      <CustomControl\n        name={'direction'}\n        object={customPropsRef.current}\n        prop={'direction'}\n        control={{\n          label: 'Direction',\n          x: { min: 0, max: 2 * Math.PI },\n          y: { min: 0, max: Math.PI },\n          onChange: ({ x: longitude, y: latitude }: { x: number; y: number }) => {\n            const newDirection: [number, number, number] = projectLongLatOnSphere({\n              x: longitude,\n              y: latitude,\n              r: radius\n            });\n            setDirection(newDirection);\n          }\n        }}\n      />\n    </>\n  );\n}\n\nexport default ProjectLongLatOnSphere;\n"],"names":["projectLongLatOnSphere","longitude","latitude","radius","coord","initialDirection","ProjectLongLatOnSphere","direction","setDirection","useState","scene","camera","useThree","useStats","useEffect","api","THREE.Color","THREE.OrthographicCamera","customPropsRef","useRef","jsxs","Fragment","jsx","CustomControl","newDirection"],"mappings":"gPAaO,MAAMA,EAAyB,CAAC,CACrC,EAAGC,EACH,EAAGC,EACH,EAAGC,CACL,IAKS,CACL,KAAK,IAAID,CAAQ,EAAI,KAAK,IAAID,CAAS,EACvC,KAAK,IAAIC,CAAQ,EACjB,KAAK,IAAIA,CAAQ,EAAI,KAAK,IAAID,CAAS,CACvC,EAAA,IAAKG,GAAUA,EAAQD,CAAM,EChB3BA,EAAS,GACTE,EAAmB,CAAE,EAAG,EAAG,EAAG,GAAI,EAEjC,SAASC,GAAyB,CACvC,KAAM,CAACC,EAAWC,CAAY,EAAIC,WAAST,EAAuB,CAAE,GAAGK,EAAkB,EAAGF,CAAO,CAAC,CAAC,EAC/F,CAAE,MAAAO,EAAO,OAAAC,CAAO,EAAIC,EAAS,EAC1BC,EAAA,EAETC,EAAAA,UAAU,KAERC,EAAI,gBAAgB,EAEpBL,EAAM,WAAa,IAAIM,EAAY,EAAE,OAAO,CAAQ,EAC7C,IAAM,CACXN,EAAM,WAAa,IACrB,GACC,CAACA,CAAK,CAAC,EAEVI,EAAAA,UAAU,IAAM,CACdH,EAAO,SAAS,IAAI,EAAG,EAAG,EAAE,EAC5BA,EAAO,SAAS,IAAI,EAAG,EAAG,CAAC,EACvBA,aAAkBM,IACpBN,EAAO,KAAO,GAChB,EACC,CAACA,CAAM,CAAC,EAEX,MAAMO,EAAiBC,EAAAA,OAAO,CAC5B,UAAWd,CAAA,CACZ,EAID,OAEIe,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAC,MAAC,QAAM,CAAA,KAAK,eACV,SAAAA,EAAA,IAAC,gBAAa,MAAO,UAAW,UAAW,IAAK,SAAU,CAAC,EAAG,EAAG,CAAC,CAAG,CAAA,EACvE,EAEAF,EAAAA,KAAC,OAAK,CAAA,KAAK,SACT,SAAA,CAAAE,EAAA,IAAC,kBAAe,KAAM,CAAC,GAAI,GAAI,EAAE,EAAG,EACnCA,EAAA,IAAA,uBAAA,CAAqB,MAAO,UAAW,UAAS,EAAC,CAAA,CAAA,EACpD,EAEAF,EAAAA,KAAC,OAAK,CAAA,SAAUb,EAAW,KAAK,aAAa,gBAAiB,CAAE,cAAe,EAAA,EAC7E,SAAA,CAAAe,EAAA,IAAC,kBAAe,KAAM,CAAC,EAAG,GAAI,EAAE,EAAG,EACnCA,EAAAA,IAAC,uBAAqB,CAAA,MAAO,SAAW,CAAA,CAAA,EAC1C,EAEAA,EAAA,IAACC,EAAA,CACC,KAAM,YACN,OAAQL,EAAe,QACvB,KAAM,YACN,QAAS,CACP,MAAO,YACP,EAAG,CAAE,IAAK,EAAG,IAAK,EAAI,KAAK,EAAG,EAC9B,EAAG,CAAE,IAAK,EAAG,IAAK,KAAK,EAAG,EAC1B,SAAU,CAAC,CAAE,EAAGjB,EAAW,EAAGC,KAAyC,CACrE,MAAMsB,EAAyCxB,EAAuB,CACpE,EAAGC,EACH,EAAGC,EACH,EAAGC,CAAA,CACJ,EACDK,EAAagB,CAAY,CAAA,CAC3B,CACF,CAAA,CACF,EACF,CAEJ"}