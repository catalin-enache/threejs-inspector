{"version":3,"file":"Experience-BSqkvR_s.js","sources":["../../node_modules/react-use-measure/dist/index.js","../../node_modules/@react-three/fiber/dist/react-three-fiber.esm.js","../../demo/scenarios/stuff/TestIndexedCube3Materials.ts","../../node_modules/three/examples/jsm/lights/LightProbeGenerator.js","../../demo/scenarios/Experience.tsx"],"sourcesContent":["import{useState as T,useRef as p,useEffect as u,useMemo as M}from\"react\";function g(n,t){let o;return(...i)=>{window.clearTimeout(o),o=window.setTimeout(()=>n(...i),t)}}function j({debounce:n,scroll:t,polyfill:o,offsetSize:i}={debounce:0,scroll:!1,offsetSize:!1}){const a=o||(typeof window==\"undefined\"?class{}:window.ResizeObserver);if(!a)throw new Error(\"This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills\");const[c,h]=T({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),e=p({element:null,scrollContainers:null,resizeObserver:null,lastBounds:c,orientationHandler:null}),d=n?typeof n==\"number\"?n:n.scroll:null,f=n?typeof n==\"number\"?n:n.resize:null,w=p(!1);u(()=>(w.current=!0,()=>void(w.current=!1)));const[z,m,s]=M(()=>{const r=()=>{if(!e.current.element)return;const{left:y,top:C,width:H,height:O,bottom:S,right:x,x:B,y:R}=e.current.element.getBoundingClientRect(),l={left:y,top:C,width:H,height:O,bottom:S,right:x,x:B,y:R};e.current.element instanceof HTMLElement&&i&&(l.height=e.current.element.offsetHeight,l.width=e.current.element.offsetWidth),Object.freeze(l),w.current&&!D(e.current.lastBounds,l)&&h(e.current.lastBounds=l)};return[r,f?g(r,f):r,d?g(r,d):r]},[h,i,d,f]);function v(){e.current.scrollContainers&&(e.current.scrollContainers.forEach(r=>r.removeEventListener(\"scroll\",s,!0)),e.current.scrollContainers=null),e.current.resizeObserver&&(e.current.resizeObserver.disconnect(),e.current.resizeObserver=null),e.current.orientationHandler&&(\"orientation\"in screen&&\"removeEventListener\"in screen.orientation?screen.orientation.removeEventListener(\"change\",e.current.orientationHandler):\"onorientationchange\"in window&&window.removeEventListener(\"orientationchange\",e.current.orientationHandler))}function b(){e.current.element&&(e.current.resizeObserver=new a(s),e.current.resizeObserver.observe(e.current.element),t&&e.current.scrollContainers&&e.current.scrollContainers.forEach(r=>r.addEventListener(\"scroll\",s,{capture:!0,passive:!0})),e.current.orientationHandler=()=>{s()},\"orientation\"in screen&&\"addEventListener\"in screen.orientation?screen.orientation.addEventListener(\"change\",e.current.orientationHandler):\"onorientationchange\"in window&&window.addEventListener(\"orientationchange\",e.current.orientationHandler))}const L=r=>{!r||r===e.current.element||(v(),e.current.element=r,e.current.scrollContainers=E(r),b())};return X(s,!!t),W(m),u(()=>{v(),b()},[t,s,m]),u(()=>v,[]),[L,c,z]}function W(n){u(()=>{const t=n;return window.addEventListener(\"resize\",t),()=>void window.removeEventListener(\"resize\",t)},[n])}function X(n,t){u(()=>{if(t){const o=n;return window.addEventListener(\"scroll\",o,{capture:!0,passive:!0}),()=>void window.removeEventListener(\"scroll\",o,!0)}},[n,t])}function E(n){const t=[];if(!n||n===document.body)return t;const{overflow:o,overflowX:i,overflowY:a}=window.getComputedStyle(n);return[o,i,a].some(c=>c===\"auto\"||c===\"scroll\")&&t.push(n),[...t,...E(n.parentElement)]}const k=[\"x\",\"y\",\"top\",\"bottom\",\"left\",\"right\",\"width\",\"height\"],D=(n,t)=>k.every(o=>n[o]===t[o]);export{j as default};\n//# sourceMappingURL=index.js.map\n","import { e as extend, u as useBridge, a as useMutableCallback, b as useIsomorphicLayoutEffect, c as createRoot, i as isRef, E as ErrorBoundary, B as Block, d as unmountComponentAtNode, f as createPointerEvents } from './events-dc44c1b8.esm.js';\nexport { t as ReactThreeFiber, _ as _roots, w as act, k as addAfterEffect, j as addEffect, l as addTail, n as advance, q as applyProps, x as buildGraph, p as context, g as createEvents, o as createPortal, c as createRoot, v as dispose, f as events, e as extend, h as flushGlobalEffects, s as getRootState, m as invalidate, r as reconciler, d as unmountComponentAtNode, C as useFrame, D as useGraph, y as useInstanceHandle, F as useLoader, z as useStore, A as useThree } from './events-dc44c1b8.esm.js';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport useMeasure from 'react-use-measure';\nimport { FiberProvider } from 'its-fine';\nimport { jsx } from 'react/jsx-runtime';\nimport 'react-reconciler/constants';\nimport 'zustand/traditional';\nimport 'react-reconciler';\nimport 'scheduler';\nimport 'suspend-react';\n\nfunction CanvasImpl({\n  ref,\n  children,\n  fallback,\n  resize,\n  style,\n  gl,\n  events = createPointerEvents,\n  eventSource,\n  eventPrefix,\n  shadows,\n  linear,\n  flat,\n  legacy,\n  orthographic,\n  frameloop,\n  dpr,\n  performance,\n  raycaster,\n  camera,\n  scene,\n  onPointerMissed,\n  onCreated,\n  ...props\n}) {\n  // Create a known catalogue of Threejs-native elements\n  // This will include the entire THREE namespace by default, users can extend\n  // their own elements by using the createRoot API instead\n  React.useMemo(() => extend(THREE), []);\n  const Bridge = useBridge();\n  const [containerRef, containerRect] = useMeasure({\n    scroll: true,\n    debounce: {\n      scroll: 50,\n      resize: 0\n    },\n    ...resize\n  });\n  const canvasRef = React.useRef(null);\n  const divRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => canvasRef.current);\n  const handlePointerMissed = useMutableCallback(onPointerMissed);\n  const [block, setBlock] = React.useState(false);\n  const [error, setError] = React.useState(false);\n\n  // Suspend this component if block is a promise (2nd run)\n  if (block) throw block;\n  // Throw exception outwards if anything within canvas throws\n  if (error) throw error;\n  const root = React.useRef(null);\n  useIsomorphicLayoutEffect(() => {\n    const canvas = canvasRef.current;\n    if (containerRect.width > 0 && containerRect.height > 0 && canvas) {\n      if (!root.current) root.current = createRoot(canvas);\n      async function run() {\n        await root.current.configure({\n          gl,\n          scene,\n          events,\n          shadows,\n          linear,\n          flat,\n          legacy,\n          orthographic,\n          frameloop,\n          dpr,\n          performance,\n          raycaster,\n          camera,\n          size: containerRect,\n          // Pass mutable reference to onPointerMissed so it's free to update\n          onPointerMissed: (...args) => handlePointerMissed.current == null ? void 0 : handlePointerMissed.current(...args),\n          onCreated: state => {\n            // Connect to event source\n            state.events.connect == null ? void 0 : state.events.connect(eventSource ? isRef(eventSource) ? eventSource.current : eventSource : divRef.current);\n            // Set up compute function\n            if (eventPrefix) {\n              state.setEvents({\n                compute: (event, state) => {\n                  const x = event[eventPrefix + 'X'];\n                  const y = event[eventPrefix + 'Y'];\n                  state.pointer.set(x / state.size.width * 2 - 1, -(y / state.size.height) * 2 + 1);\n                  state.raycaster.setFromCamera(state.pointer, state.camera);\n                }\n              });\n            }\n            // Call onCreated callback\n            onCreated == null ? void 0 : onCreated(state);\n          }\n        });\n        root.current.render( /*#__PURE__*/jsx(Bridge, {\n          children: /*#__PURE__*/jsx(ErrorBoundary, {\n            set: setError,\n            children: /*#__PURE__*/jsx(React.Suspense, {\n              fallback: /*#__PURE__*/jsx(Block, {\n                set: setBlock\n              }),\n              children: children != null ? children : null\n            })\n          })\n        }));\n      }\n      run();\n    }\n  });\n  React.useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) return () => unmountComponentAtNode(canvas);\n  }, []);\n\n  // When the event source is not this div, we need to set pointer-events to none\n  // Or else the canvas will block events from reaching the event source\n  const pointerEvents = eventSource ? 'none' : 'auto';\n  return /*#__PURE__*/jsx(\"div\", {\n    ref: divRef,\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      pointerEvents,\n      ...style\n    },\n    ...props,\n    children: /*#__PURE__*/jsx(\"div\", {\n      ref: containerRef,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/jsx(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          display: 'block'\n        },\n        children: fallback\n      })\n    })\n  });\n}\n\n/**\r\n * A DOM canvas which accepts threejs elements as children.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/canvas\r\n */\nfunction Canvas(props) {\n  return /*#__PURE__*/jsx(FiberProvider, {\n    children: /*#__PURE__*/jsx(CanvasImpl, {\n      ...props\n    })\n  });\n}\n\nexport { Canvas };\n","import * as THREE from 'three';\n\nexport const TestIndexedCube3Materials = () => {\n  const geometry = new THREE.BufferGeometry();\n\n  // prettier-ignore\n  const vertices = new Float32Array([\n    -1.0, -1.0,  1.0,  // 0\n    1.0, -1.0,  1.0,  // 1\n    1.0,  1.0,  1.0,  // 2\n    -1.0,  1.0,  1.0,  // 3\n    -1.0, -1.0, -1.0,  // 4\n    1.0, -1.0, -1.0,  // 5\n    1.0,  1.0, -1.0,  // 6\n    -1.0,  1.0, -1.0   // 7\n  ]);\n\n  // Add the vertices to the geometry\n  geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n  // prettier-ignore\n  const indices = new Uint16Array([\n    0, 1, 2, 2, 3, 0,  // Front face\n    1, 5, 6, 6, 2, 1,  // Right face\n    4, 0, 3, 3, 7, 4,  // Left face\n    4, 5, 1, 1, 0, 4,  // Bottom face\n    3, 2, 6, 6, 7, 3,  // Top face\n    5, 4, 7, 7, 6, 5   // Back face\n  ]);\n\n  // Set the index buffer for the geometry\n  geometry.setIndex(new THREE.BufferAttribute(indices, 1));\n\n  const materials = [\n    new THREE.MeshBasicMaterial({ color: 0xff0000 }), // Red\n    new THREE.MeshBasicMaterial({ color: 0x00ff00 }), // Green\n    new THREE.MeshBasicMaterial({ color: 0x0000ff }) // Blue\n  ];\n\n  // Assign groups to different materials\n  geometry.addGroup(0, 6, 0);\n  geometry.addGroup(6, 6, 1);\n  geometry.addGroup(12, 6, 2);\n  geometry.addGroup(18, 6, 0);\n  geometry.addGroup(24, 6, 1);\n  geometry.addGroup(30, 6, 2);\n\n  const cube = new THREE.Mesh(geometry, materials);\n  cube.name = 'IndexedCube3Materials';\n\n  const group = new THREE.Group();\n  group.__inspectorData.isInspectable = true;\n  group.name = 'IndexedCube3Materials group';\n  group.add(cube);\n  const pointLight = new THREE.PointLight(0xffffff, 1);\n  pointLight.name = 'IndexedCube3Materials pointLight';\n  cube.add(pointLight);\n  return group;\n};\n","import {\n\tColor,\n\tLightProbe,\n\tLinearSRGBColorSpace,\n\tSphericalHarmonics3,\n\tVector3,\n\tSRGBColorSpace,\n\tNoColorSpace,\n\tHalfFloatType,\n\tDataUtils,\n\tWebGLCoordinateSystem\n} from 'three';\n\n/**\n * Utility class for creating instances of {@link LightProbe}.\n *\n * @hideconstructor\n */\nclass LightProbeGenerator {\n\n\t/**\n\t * Creates a light probe from the given (radiance) environment map.\n\t * The method expects that the environment map is represented as a cube texture.\n\t *\n\t * @param {CubeTexture} cubeTexture - The environment map.\n\t * @return {LightProbe} The created light probe.\n\t */\n\tstatic fromCubeTexture( cubeTexture ) {\n\n\t\t// https://www.ppsloan.org/publications/StupidSH36.pdf\n\n\t\tlet totalWeight = 0;\n\n\t\tconst coord = new Vector3();\n\n\t\tconst dir = new Vector3();\n\n\t\tconst color = new Color();\n\n\t\tconst shBasis = [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\n\n\t\tconst sh = new SphericalHarmonics3();\n\t\tconst shCoefficients = sh.coefficients;\n\n\t\tfor ( let faceIndex = 0; faceIndex < 6; faceIndex ++ ) {\n\n\t\t\tconst image = cubeTexture.image[ faceIndex ];\n\n\t\t\tconst width = image.width;\n\t\t\tconst height = image.height;\n\n\t\t\tconst canvas = document.createElement( 'canvas' );\n\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\n\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, width, height );\n\n\t\t\tconst data = imageData.data;\n\n\t\t\tconst imageWidth = imageData.width; // assumed to be square\n\n\t\t\tconst pixelSize = 2 / imageWidth;\n\n\t\t\tfor ( let i = 0, il = data.length; i < il; i += 4 ) { // RGBA assumed\n\n\t\t\t\t// pixel color\n\t\t\t\tcolor.setRGB( data[ i ] / 255, data[ i + 1 ] / 255, data[ i + 2 ] / 255 );\n\n\t\t\t\t// convert to linear color space\n\t\t\t\tconvertColorToLinear( color, cubeTexture.colorSpace );\n\n\t\t\t\t// pixel coordinate on unit cube\n\n\t\t\t\tconst pixelIndex = i / 4;\n\n\t\t\t\tconst col = - 1 + ( pixelIndex % imageWidth + 0.5 ) * pixelSize;\n\n\t\t\t\tconst row = 1 - ( Math.floor( pixelIndex / imageWidth ) + 0.5 ) * pixelSize;\n\n\t\t\t\tswitch ( faceIndex ) {\n\n\t\t\t\t\tcase 0: coord.set( - 1, row, - col ); break;\n\n\t\t\t\t\tcase 1: coord.set( 1, row, col ); break;\n\n\t\t\t\t\tcase 2: coord.set( - col, 1, - row ); break;\n\n\t\t\t\t\tcase 3: coord.set( - col, - 1, row ); break;\n\n\t\t\t\t\tcase 4: coord.set( - col, row, 1 ); break;\n\n\t\t\t\t\tcase 5: coord.set( col, row, - 1 ); break;\n\n\t\t\t\t}\n\n\t\t\t\t// weight assigned to this pixel\n\n\t\t\t\tconst lengthSq = coord.lengthSq();\n\n\t\t\t\tconst weight = 4 / ( Math.sqrt( lengthSq ) * lengthSq );\n\n\t\t\t\ttotalWeight += weight;\n\n\t\t\t\t// direction vector to this pixel\n\t\t\t\tdir.copy( coord ).normalize();\n\n\t\t\t\t// evaluate SH basis functions in direction dir\n\t\t\t\tSphericalHarmonics3.getBasisAt( dir, shBasis );\n\n\t\t\t\t// accumulate\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tshCoefficients[ j ].x += shBasis[ j ] * color.r * weight;\n\t\t\t\t\tshCoefficients[ j ].y += shBasis[ j ] * color.g * weight;\n\t\t\t\t\tshCoefficients[ j ].z += shBasis[ j ] * color.b * weight;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// normalize\n\t\tconst norm = ( 4 * Math.PI ) / totalWeight;\n\n\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\tshCoefficients[ j ].x *= norm;\n\t\t\tshCoefficients[ j ].y *= norm;\n\t\t\tshCoefficients[ j ].z *= norm;\n\n\t\t}\n\n\t\treturn new LightProbe( sh );\n\n\t}\n\n\t/**\n\t * Creates a light probe from the given (radiance) environment map.\n\t * The method expects that the environment map is represented as a cube render target.\n\t *\n\t * The cube render target must be in RGBA so `cubeRenderTarget.texture.format` must be\n\t * set to {@link RGBAFormat}.\n\t *\n\t * @async\n\t * @param {WebGPURenderer|WebGLRenderer} renderer - The renderer.\n\t * @param {CubeRenderTarget|WebGLCubeRenderTarget} cubeRenderTarget - The environment map.\n\t * @return {Promise<LightProbe>} A Promise that resolves with the created light probe.\n\t */\n\tstatic async fromCubeRenderTarget( renderer, cubeRenderTarget ) {\n\n\t\tconst flip = renderer.coordinateSystem === WebGLCoordinateSystem ? - 1 : 1;\n\n\t\t// The renderTarget must be set to RGBA in order to make readRenderTargetPixels works\n\t\tlet totalWeight = 0;\n\n\t\tconst coord = new Vector3();\n\n\t\tconst dir = new Vector3();\n\n\t\tconst color = new Color();\n\n\t\tconst shBasis = [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\n\n\t\tconst sh = new SphericalHarmonics3();\n\t\tconst shCoefficients = sh.coefficients;\n\n\t\tconst dataType = cubeRenderTarget.texture.type;\n\t\tconst imageWidth = cubeRenderTarget.width; // assumed to be square\n\n\t\tlet data;\n\n\t\tif ( renderer.isWebGLRenderer ) {\n\n\t\t\tif ( dataType === HalfFloatType ) {\n\n\t\t\t\tdata = new Uint16Array( imageWidth * imageWidth * 4 );\n\n\t\t\t} else {\n\n\t\t\t\t// assuming UnsignedByteType\n\n\t\t\t\tdata = new Uint8Array( imageWidth * imageWidth * 4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let faceIndex = 0; faceIndex < 6; faceIndex ++ ) {\n\n\t\t\tif ( renderer.isWebGLRenderer ) {\n\n\t\t\t\tawait renderer.readRenderTargetPixelsAsync( cubeRenderTarget, 0, 0, imageWidth, imageWidth, data, faceIndex );\n\n\t\t\t} else {\n\n\t\t\t\tdata = await renderer.readRenderTargetPixelsAsync( cubeRenderTarget, 0, 0, imageWidth, imageWidth, 0, faceIndex );\n\n\t\t\t}\n\n\t\t\tconst pixelSize = 2 / imageWidth;\n\n\t\t\tfor ( let i = 0, il = data.length; i < il; i += 4 ) { // RGBA assumed\n\n\t\t\t\tlet r, g, b;\n\n\t\t\t\tif ( dataType === HalfFloatType ) {\n\n\t\t\t\t\tr = DataUtils.fromHalfFloat( data[ i ] );\n\t\t\t\t\tg = DataUtils.fromHalfFloat( data[ i + 1 ] );\n\t\t\t\t\tb = DataUtils.fromHalfFloat( data[ i + 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tr = data[ i ] / 255;\n\t\t\t\t\tg = data[ i + 1 ] / 255;\n\t\t\t\t\tb = data[ i + 2 ] / 255;\n\n\t\t\t\t}\n\n\t\t\t\t// pixel color\n\t\t\t\tcolor.setRGB( r, g, b );\n\n\t\t\t\t// convert to linear color space\n\t\t\t\tconvertColorToLinear( color, cubeRenderTarget.texture.colorSpace );\n\n\t\t\t\t// pixel coordinate on unit cube\n\n\t\t\t\tconst pixelIndex = i / 4;\n\n\t\t\t\tconst col = ( 1 - ( pixelIndex % imageWidth + 0.5 ) * pixelSize ) * flip;\n\n\t\t\t\tconst row = 1 - ( Math.floor( pixelIndex / imageWidth ) + 0.5 ) * pixelSize;\n\n\t\t\t\tswitch ( faceIndex ) {\n\n\t\t\t\t\tcase 0: coord.set( - 1 * flip, row, col * flip ); break;\n\n\t\t\t\t\tcase 1: coord.set( 1 * flip, row, - col * flip ); break;\n\n\t\t\t\t\tcase 2: coord.set( col, 1, - row ); break;\n\n\t\t\t\t\tcase 3: coord.set( col, - 1, row ); break;\n\n\t\t\t\t\tcase 4: coord.set( col, row, 1 ); break;\n\n\t\t\t\t\tcase 5: coord.set( - col, row, - 1 ); break;\n\n\t\t\t\t}\n\n\t\t\t\t// weight assigned to this pixel\n\n\t\t\t\tconst lengthSq = coord.lengthSq();\n\n\t\t\t\tconst weight = 4 / ( Math.sqrt( lengthSq ) * lengthSq );\n\n\t\t\t\ttotalWeight += weight;\n\n\t\t\t\t// direction vector to this pixel\n\t\t\t\tdir.copy( coord ).normalize();\n\n\t\t\t\t// evaluate SH basis functions in direction dir\n\t\t\t\tSphericalHarmonics3.getBasisAt( dir, shBasis );\n\n\t\t\t\t// accumulate\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tshCoefficients[ j ].x += shBasis[ j ] * color.r * weight;\n\t\t\t\t\tshCoefficients[ j ].y += shBasis[ j ] * color.g * weight;\n\t\t\t\t\tshCoefficients[ j ].z += shBasis[ j ] * color.b * weight;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// normalize\n\t\tconst norm = ( 4 * Math.PI ) / totalWeight;\n\n\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\tshCoefficients[ j ].x *= norm;\n\t\t\tshCoefficients[ j ].y *= norm;\n\t\t\tshCoefficients[ j ].z *= norm;\n\n\t\t}\n\n\t\treturn new LightProbe( sh );\n\n\t}\n\n}\n\nfunction convertColorToLinear( color, colorSpace ) {\n\n\tswitch ( colorSpace ) {\n\n\t\tcase SRGBColorSpace:\n\n\t\t\tcolor.convertSRGBToLinear();\n\t\t\tbreak;\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase NoColorSpace:\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tconsole.warn( 'WARNING: LightProbeGenerator convertColorToLinear() encountered an unsupported color space.' );\n\t\t\tbreak;\n\n\t}\n\n\treturn color;\n\n}\n\nexport { LightProbeGenerator };\n","import * as THREE from 'three';\nimport { useEffect, useRef, useState } from 'react';\nimport { useFrame, ThreeElements, useThree } from '@react-three/fiber';\n// @ts-ignore\nimport Stats from 'three/addons/libs/stats.module.js';\nimport { CustomControl } from 'src/components/CustomControl/CustomControl';\nimport { usePlay } from 'src/lib/hooks';\nimport { TestIndexedCube3Materials } from './stuff/TestIndexedCube3Materials';\n// import { TestMorphTargets } from './TestMorphTargets';\n// @ts-ignore\nimport { LightProbeGenerator } from 'three/examples/jsm/lights/LightProbeGenerator';\nimport { getShadowMapMaterial } from 'src/lib/utils/customShaders';\nimport api from 'src/lib/api';\n\nconst degToRad = THREE.MathUtils.degToRad;\n\nconst stats = new Stats();\ndocument.body.appendChild(stats.dom);\nconst shadowMapMaterial = getShadowMapMaterial();\n// @ts-ignore\nfunction Box(\n  props: ThreeElements['mesh'] & {\n    mapURL: string;\n    alphaMapURL?: string;\n  }\n) {\n  const refMesh = useRef<THREE.Mesh>(null!);\n  const [hovered, _hover] = useState(false);\n  const [clicked, _click] = useState(false);\n  const [map, setMap] = useState<THREE.Texture | null>(null);\n  const [alphaMap, setAlphaMap] = useState<THREE.Texture | null>(null);\n  const meshMaterialRef = useRef<THREE.MeshStandardMaterial | null>(null);\n  const { position = [0, 0, 0], mapURL, alphaMapURL, ...rest } = props;\n  usePlay((playingState, _state, delta) => {\n    // console.log('Box usePlay', { playingState, _state, delta });\n    if (playingState === 'playing') {\n      refMesh.current && (refMesh.current.rotation.x += delta);\n      // refMesh.current.position.x = Math.sin(Date.now() / 1000);\n      // refMesh?.current && (refMesh.current.position.z = 2);\n    } else if (playingState === 'stopped') {\n      refMesh.current && (refMesh.current.rotation.x = 0);\n    }\n  });\n\n  useEffect(() => {\n    return api.registerDefaultPlayTriggers();\n  }, []);\n\n  useEffect(() => {\n    // 'https://threejsfundamentals.org/threejs/resources/images/wall.jpg',\n    // 'textures/file_example_TIFF_10MB.tiff',\n    // 'textures/sample_5184×3456.tga',\n    // 'textures/checkerboard-8x8.png',\n    // 'textures/castle_brick_02_red_nor_gl_4k.exr',\n    // 'textures/sikqyan_2K_Displacement.exr',\n    api.createTexturesFromImages(mapURL, { material: meshMaterialRef }).then((textures) => {\n      const map = textures[0];\n      // console.log('setting map');\n      setMap(map);\n    });\n    alphaMapURL &&\n      api.createTexturesFromImages(alphaMapURL, { material: meshMaterialRef }).then((textures) => {\n        const map = textures[0];\n        // console.log('setting alphaMap');\n        setAlphaMap(map);\n      });\n  }, [mapURL, alphaMapURL]);\n\n  return (\n    <mesh\n      {...rest}\n      // castShadow={true}\n      ref={refMesh}\n      scale={clicked ? 1.05 : 1}\n      // onClick={(_event) => _click(!clicked)}\n      // onPointerOver={(_event) => _hover(true)}\n      // onPointerOut={(_event) => _hover(false)}\n      position={position}\n    >\n      <boxGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial\n        ref={meshMaterialRef}\n        color={hovered ? 'hotpink' : 'white'}\n        map={map}\n        alphaMap={alphaMap}\n        roughness={0}\n        metalness={1}\n      />\n      {props.children}\n    </mesh>\n  );\n}\n\nexport function Experience() {\n  // @ts-ignore\n  const { scene, gl, clock, camera } = useThree();\n  const refDirectionalLight = useRef<THREE.DirectionalLight>(null!);\n  const refPointLight = useRef<THREE.PointLight>(null!);\n  const refSpotLight = useRef<THREE.SpotLight>(null!);\n  const refLightProbe = useRef<THREE.LightProbe>(null!);\n  const doorMaterialRef = useRef<THREE.MeshStandardMaterial>(null!);\n  const cubeCameraRef = useRef<THREE.CubeCamera>(null!);\n  const webGLCubeRenderTargetRef = useRef(\n    new THREE.WebGLCubeRenderTarget(1024, {\n      // these are not required\n      // type: THREE.HalfFloatType // does not work well when reading back the texture in inspector/TexturePlugin\n      // format: THREE.RGBAFormat\n      // generateMipmaps: true\n      // depthTexture: new THREE.DepthTexture(512, 512)\n    })\n  );\n\n  const customPropsRef = useRef({\n    myImage: null,\n    myBool: false,\n    myNumber: 0.23,\n    myPoint: { x: 0.5, y: 0.5 }\n  });\n\n  // const [myImage, setMyImage] = useState<any>(null);\n  const [showOthers, setShowOthers] = useState(false);\n  // @ts-ignore\n  const [customControlXY, setCustomControlXY] = useState({ x: 0.5, y: 0.5 });\n  // @ts-ignore\n  const [number, setNumber] = useState(1.23);\n  const audioListenerRef = useRef<THREE.AudioListener>(new THREE.AudioListener());\n\n  useFrame((_state, _delta) => {\n    stats.update();\n  });\n  usePlay(\n    (_playState, _rootState, _delta) => {\n      if (refPointLight.current) {\n        // refPointLight.current.intensity = Math.sin(Date.now() / 100) + 1;\n      }\n      if (cubeCameraRef.current) {\n        cubeCameraRef.current.rotateX(0.01);\n        // cubeCameraRef.current.__inspectorData.helper.update();\n        // cubeCameraRef.current.__inspectorData.picker.update();\n      }\n      if (refDirectionalLight.current) {\n        refDirectionalLight.current.translateX(0.01);\n      }\n      if (refPointLight.current) {\n        refPointLight.current.translateZ(0.01);\n      }\n      if (refSpotLight.current) {\n        refSpotLight.current.translateZ(0.01);\n      }\n      if (customPropsRef.current) {\n        customPropsRef.current.myNumber += 0.01;\n      }\n    },\n    0,\n    [showOthers]\n  );\n\n  usePlay((_state, _rootState, _delta) => {\n    // setNumber((prev) => {\n    //   // console.log('Experience setting new value on play', prev + 0.01);\n    //   return prev + 0.01;\n    // });\n    // setCustomControlXY((prev) => {\n    //   return { x: prev.x + 0.01, y: prev.y };\n    // });\n  });\n\n  useEffect(() => {\n    api\n      .createTexturesFromImages(\n        ['alpha.jpg', 'ao.jpg', 'color.jpg', 'height.jpg', 'metalness.jpg', 'normal.jpg', 'roughness.jpg'].map(\n          (img) => `textures/pbr/door/${img}`\n        )\n      )\n      .then((textures) => {\n        if (!doorMaterialRef.current) return;\n        // console.log(doorMaterialRef.current, textures);\n        doorMaterialRef.current.alphaMap = textures[0];\n        doorMaterialRef.current.aoMap = textures[1];\n        textures[2].colorSpace = THREE.SRGBColorSpace;\n        doorMaterialRef.current.map = textures[2];\n        doorMaterialRef.current.bumpMap = textures[3];\n        doorMaterialRef.current.metalnessMap = textures[4];\n        doorMaterialRef.current.normalMap = textures[5];\n        doorMaterialRef.current.roughnessMap = textures[6];\n        doorMaterialRef.current.metalness = 1;\n        doorMaterialRef.current.roughness = 0.7;\n        doorMaterialRef.current.transparent = true;\n        doorMaterialRef.current.needsUpdate = true;\n      });\n  }, []);\n\n  useEffect(() => {\n    // 'https://threejsfundamentals.org/threejs/resources/images/wall.jpg',\n    // 'textures/test/file_example_TIFF_1MB.tiff',\n    // 'textures/test/one_gray_channel.exr',\n    // 'textures/background/2d/cover-1920.jpg',\n    // 'textures/background/equirectangular/2294472375_24a3b8ef46_o.jpg',\n    // 'textures/background/equirectangular/TCom_NorwayForest_4K_hdri_sphere.exr'\n    // 'textures/background/equirectangular/kloofendal_48d_partly_cloudy_puresky_4k.hdr'\n    // 'textures/background/equirectangular/spruit_sunrise_4k.hdr.jpg'\n    // ['px', 'nx', 'py', 'ny', 'pz', 'nz'].map((t) => `textures/background/cube/MilkyWay/dark-s_${t}.jpg`)\n    // ['px', 'nx', 'py', 'ny', 'pz', 'nz'].map((t) => `textures/background/cube/Park3Med/${t}.jpg`)\n    // ['px', 'nx', 'py', 'ny', 'pz', 'nz'].map((t) => `textures/background/cube/skyboxsun25deg/${t}.jpg`)\n    // ['px', 'nx', 'py', 'ny', 'pz', 'nz'].map((t) => `textures/background/cube/pisa/${t}.png`)\n    api\n      .createTexturesFromImages('textures/background/equirectangular/spruit_sunrise_4k.hdr.jpg', {})\n      .then((textures) => {\n        // console.log('createTextureFromImages', textures);\n        const texture = textures[0];\n        texture.mapping =\n          texture instanceof THREE.CubeTexture\n            ? THREE.CubeRefractionMapping // THREE.CubeReflectionMapping, THREE.CubeRefractionMapping\n            : texture.image.width / texture.image.height === 2\n              ? THREE.EquirectangularRefractionMapping\n              : THREE.UVMapping;\n        // texture.mapping = THREE.EquirectangularReflectionMapping;\n        texture.needsUpdate = true;\n        // texture.colorSpace = THREE.SRGBColorSpace;\n        if (refLightProbe.current && texture instanceof THREE.CubeTexture) {\n          refLightProbe.current.copy(LightProbeGenerator.fromCubeTexture(texture));\n          refLightProbe.current.name = 'myLightProbe';\n          // refLightProbe.current.position.set(0, 0, 3);\n          refLightProbe.current.intensity = 1;\n        }\n\n        // const pmremGenerator = new THREE.PMREMGenerator(gl);\n\n        // pmremGenerator.compileEquirectangularShader();\n        // pmremGenerator.compileCubemapShader();\n\n        // const PMREMRenderTarget = pmremGenerator.fromCubemap(texture as THREE.CubeTexture);\n        // const PMREMRenderTarget = pmremGenerator.fromEquirectangular(texture);\n        // const PMREMRenderTarget = pmremGenerator.fromScene(scene);\n        // PMREMRenderTarget.texture.mapping = THREE.CubeUVReflectionMapping;\n        // texture.colorSpace = THREE.SRGBColorSpace;\n        // texture.copy(PMREMRenderTarget.texture);\n        // texture.source = PMREMRenderTarget.texture.source;\n        // texture.image = PMREMRenderTarget.texture.image;\n        // console.log('createTextureFromImages', {\n        //   texture,\n        //   PMREMRenderTarget,\n        //   'PMREMRenderTarget.texture': PMREMRenderTarget.texture\n        // });\n        // scene.background = PMREMRenderTarget.texture;\n        // scene.environment = PMREMRenderTarget.texture;\n        // texture.mapping = THREE.EquirectangularReflectionMapping;\n        scene.background = texture; // leaves behind 1 geometry\n        scene.environment = texture; // leaves behind 1 texture and 13 geometries\n        // texture.needsPMREMUpdate = true;\n        // texture.needsUpdate = true;\n        if (doorMaterialRef.current) {\n          // doorMaterialRef.current.envMap = texture; // leaves behind 1 texture and 13 geometries\n        }\n\n        api.refreshCPanel();\n        api.updateCubeCameras();\n\n        // api.loadObject('models/FromThreeRepo/ply/binary/Lucy100k.ply', {}).then((mesh) => {\n        //   if (!mesh) return;\n        //   mesh.name = 'LoadedMesh';\n        //\n        //   const phongMaterial = new THREE.MeshPhongMaterial({\n        //     color: 0xffffff,\n        //     envMap: scene.background as THREE.Texture,\n        //     refractionRatio: 0.98\n        //   });\n        //\n        //   const s = 0.001;\n        //   (mesh as THREE.Mesh).material = phongMaterial;\n        //   mesh.position.set(1, 0, 2);\n        //   mesh.__inspectorData.isInspectable = true;\n        //   mesh.scale.x = mesh.scale.y = mesh.scale.z = s;\n        //\n        //   scene.add(mesh);\n        // });\n\n        // models/Free/fbx/Asuna/2/FreeTestAnimations_reexport.fbx\n        // models/MyTests/having space in path/asset with space in path.fbx\n        // models/MyTests/with_non_default_textures/with_non_native_textures.fbx\n        // models/NonFree/Dark Elf Blader - Game Ready/Assets/Textures/DarkElfBlader_FBX_From3DsMax.fbx\n        // models/Free/gltf/Mixamo/Jennifer/Jennifer.glb\n        api\n          .loadObject(['Jennifer.glb', 'Animations_gltf/Idle.glb', 'Animations_gltf/Catwalk_Walk_Forward.glb'], {\n            // api.loadObject(['Samba Dancing.fbx'], {\n            // api.loadObject(['coffeemat.glb'], {\n            scene,\n            camera,\n            autoScaleRatio: 0.4,\n            path: 'models/Free/gltf/Mixamo/Jennifer/'\n            // path: 'models/FromThreeRepo/fbx/'\n            // path: 'models/FromThreeRepo/gltf_glb/'\n          })\n          .then((mesh) => {\n            if (!mesh) return;\n            mesh.__inspectorData.isInspectable = true;\n            scene.add(mesh);\n            // api.deepTraverse(\n            //   mesh,\n            //   ({ value, path, ancestors }) => {\n            //     console.log('deepTraverseUUID', { value, path, ancestors });\n            //   },\n            //   ({ value, key, parent }) => {\n            //     // return key === 'children' && value.length;\n            //     return value instanceof THREE.Group;\n            //   }\n            // );\n            setTimeout(() => {\n              // mesh.removeFromParent();\n            }, 8000);\n          });\n\n        const testIndexedCube3Materials = TestIndexedCube3Materials();\n        // const testMorphTargets = TestMorphTargets();\n        const recombinedCube = api.splitMeshesByMaterial(testIndexedCube3Materials, {});\n        recombinedCube.castShadow = true;\n        recombinedCube.receiveShadow = true;\n        // testIndexedCube3Materials.position.set(0, 0, 0);\n        // recombinedCube.position.set(0, 3, 0);\n        // recombinedCube.name = 'recombinedCube';\n\n        // these are not needed\n        // testIndexedCube3Materials.__inspectorData.isInspectable = true;\n        recombinedCube.__inspectorData.isInspectable = true;\n\n        // console.log('recombinedCube', { testIndexedCube3Materials, recombinedCube });\n\n        // scene.add(testIndexedCube3Materials);\n        scene.add(recombinedCube);\n        // scene.add(testMorphTargets);\n        shadowMapMaterial.uniforms.tDiffuse.value = refDirectionalLight.current.shadow.map?.texture;\n        // gl.setSize(400, 200);\n        // camera.aspect = 400 / 200;\n        // camera.updateProjectionMatrix();\n      });\n  }, []);\n\n  return (\n    <>\n      <group name=\"lights group\">\n        <directionalLight\n          shadow-mapSize-width={2048}\n          shadow-mapSize-height={2048}\n          shadow-radius={4}\n          shadow-camera-right={15}\n          shadow-camera-left={-15}\n          shadow-camera-top={15}\n          shadow-camera-bottom={-15}\n          // shadow-bias={-0.001}\n          shadow-blurSamples={8}\n          castShadow\n          position={[2, 2, 2]}\n          scale={1}\n          intensity={4.5}\n          ref={refDirectionalLight}\n          color={'white'}\n          __inspectorData={{ isInspectable: false }}\n        ></directionalLight>\n        <hemisphereLight\n          // args={[0xffffff, 0xffffff, 2]}\n          intensity={2}\n          color={new THREE.Color().setHSL(0.6, 1, 0.6)}\n          groundColor={new THREE.Color().setHSL(0.095, 1, 0.75)}\n        />\n        <ambientLight color={'#ffffff'} intensity={3.5} position={[0, 1, 0]} />\n        {/* rectAreaLight (RectAreaLightUniformsLib) gives 2 textures that cannot be disposed */}\n        <rectAreaLight\n          color={'deepskyblue'}\n          position={[-3, 0, -8]}\n          rotation={[-2.51, 0, 0]}\n          intensity={6}\n          width={10}\n          height={10}\n        />\n        <pointLight\n          castShadow\n          // shadow-mapSize={[2048, 2048]}\n          position={[0, -2, 0]}\n          color={'orange'}\n          // decay={0}\n          scale={1}\n          intensity={Math.PI}\n          ref={refPointLight}\n          __inspectorData={{ isInspectable: false }}\n        />\n\n        <spotLight\n          castShadow\n          position={[5.5, -0.7, 0.3]} // position={[5.5, -0.7, 0.3]} | position={[-12.98, 3.963, 4.346]}\n          // | rotation={[degToRad(-42.342), degToRad(-65.604), degToRad(-39.706)]}\n          scale={1}\n          intensity={66}\n          distance={30}\n          color=\"deepskyblue\"\n          angle={Math.PI / 8}\n          penumbra={0.5}\n          decay={0.1}\n          ref={refSpotLight}\n        ></spotLight>\n\n        <lightProbe ref={refLightProbe} color={'blue'} position={[0, 0, 3]} name={'myLightProbe'} />\n      </group>\n\n      <Box\n        castShadow\n        receiveShadow\n        mapURL=\"textures/utils/checkerboard-8x8.png\"\n        position={[-1.2, customControlXY.x, customControlXY.y]}\n        __inspectorData={{ isInspectable: true }}\n        name=\"Box 1\"\n      />\n      <Box\n        mapURL=\"textures/utils/checkerboard-8x8.png\"\n        alphaMapURL=\"textures/utils/checkerboard-8x8.png\"\n        position={[1.2, 0, 0]}\n        __inspectorData={{ isInspectable: true }}\n        castShadow\n        receiveShadow\n        name=\"Box 2\"\n      >\n        <mesh\n          // receiveShadow\n          position={[1.5, 0.5, 0]}\n          __inspectorData={{ isInspectable: true }}\n          name=\"Box 2 child\"\n        >\n          <boxGeometry args={[1, 1, 1]} />\n          <meshStandardMaterial />\n        </mesh>\n      </Box>\n      <mesh\n        name=\"plane\"\n        rotation={[-1.5, 0, 0]}\n        position={[-5, -7.23, -3]}\n        receiveShadow={true}\n        __inspectorData={{ isInspectable: true }}\n      >\n        <planeGeometry args={[32, 32]} />\n        <meshStandardMaterial color=\"white\" side={THREE.DoubleSide} />\n        {/*<meshStandardMaterial*/}\n        {/*  roughness={0}*/}\n        {/*  metalness={1}*/}\n        {/*  envMap={webGLCubeRenderTargetRef.current.texture}*/}\n        {/*  color=\"white\"*/}\n        {/*  side={THREE.DoubleSide}*/}\n        {/*/>*/}\n      </mesh>\n\n      <mesh\n        name=\"shMapPlane\"\n        rotation={[-1.5, 0, 0]}\n        position={[-15, -17.23, -3]}\n        receiveShadow={false}\n        castShadow={false}\n        __inspectorData={{ isInspectable: true }}\n        material={shadowMapMaterial}\n      >\n        <planeGeometry args={[32, 32]} />\n        {/*<meshStandardMaterial side={THREE.DoubleSide} map={refDirectionalLight.current?.shadow?.map?.texture} />*/}\n        {/*<meshStandardMaterial*/}\n        {/*  roughness={0}*/}\n        {/*  metalness={1}*/}\n        {/*  envMap={webGLCubeRenderTargetRef.current.texture}*/}\n        {/*  color=\"white\"*/}\n        {/*  side={THREE.DoubleSide}*/}\n        {/*/>*/}\n      </mesh>\n\n      <mesh\n        name=\"door\"\n        rotation={[0, 0, 0]}\n        position={[0, 0, -2]}\n        receiveShadow\n        castShadow\n        __inspectorData={{ isInspectable: true }}\n      >\n        <planeGeometry args={[16, 16]} />\n        {/*@ts-ignore*/}\n        <meshPhysicalMaterial ref={doorMaterialRef} side={THREE.DoubleSide} />\n      </mesh>\n\n      {/*<mesh*/}\n      {/*  name=\"door\"*/}\n      {/*  rotation={[0, 0, 0]}*/}\n      {/*  position={[2000, 2000, -2000]}*/}\n      {/*  receiveShadow*/}\n      {/*  castShadow*/}\n      {/*  __inspectorData={{ isInspectable: true }}*/}\n      {/*>*/}\n      {/*  <planeGeometry args={[16, 16]} />*/}\n      {/*  /!*@ts-ignore*!/*/}\n      {/*  <meshPhysicalMaterial ref={doorMaterialRef} side={THREE.DoubleSide} />*/}\n      {/*</mesh>*/}\n\n      <positionalAudio args={[audioListenerRef.current]} position={[0, 0, 5]} />\n\n      <perspectiveCamera\n        args={[75, 1, 0.1, 100]} // window.innerWidth / window.innerHeight\n        position={[-12.98, 3.963, 4.346]} // position={[-12.98, 3.963, 4.346]} | position={[5.5, -0.7, 0.3]}\n        name=\"myPerspectiveCamera\"\n        rotation={[degToRad(-42.342), degToRad(-65.604), degToRad(-39.706)]} // rotation={[degToRad(-42.342), degToRad(-65.604), degToRad(-39.706)]} | rotation={[degToRad(0), degToRad(67), degToRad(0)]}\n        __inspectorData={{ useOnPlay: true }}\n      />\n\n      <orthographicCamera\n        args={[1, -1, 1, -1, 0.1, 10000]} // window.innerWidth / window.innerHeight\n        zoom={45}\n        position={[-10.98, 1.963, 1.346]}\n        name=\"myOrthographicCamera\"\n        rotation={[degToRad(-42.342), degToRad(-65.604), degToRad(-39.706)]} // 25.86 , -46.13, 19.26\n        __inspectorData={{ useOnPlay: false }}\n      />\n\n      <cubeCamera\n        ref={cubeCameraRef}\n        name=\"myCubeCamera\"\n        args={[0.1, 1000, webGLCubeRenderTargetRef.current]}\n        position={[0, 0, 8]}\n      />\n\n      <CustomControl\n        name={'myBool'}\n        object={customPropsRef.current}\n        prop={'myBool'}\n        control={{\n          label: 'My Bool',\n          onChange: (value: boolean) => {\n            setShowOthers(value);\n          }\n        }}\n      />\n      <CustomControl\n        name={'myBool_2'}\n        object={customPropsRef.current}\n        prop={'myBool'}\n        control={{\n          label: 'My Bool',\n          onChange: (value: boolean) => {\n            setShowOthers(value);\n          }\n        }}\n      />\n      {showOthers && (\n        <>\n          <CustomControl\n            name={'SceneBG'}\n            object={scene}\n            prop={'background'}\n            control={{\n              label: 'Texture',\n              gl,\n              color: { type: 'float' },\n              onChange: (...args: any[]) => {\n                console.log('Experience reacting to SceneBG value change', args);\n              }\n            }}\n          />\n          <CustomControl\n            name=\"myNumber\"\n            object={customPropsRef.current}\n            prop={'myNumber'}\n            control={{\n              label: 'My Number',\n              step: 0.01,\n              keyScale: 0.1,\n              pointerScale: 0.01,\n              onChange: (value: number) => {\n                customPropsRef.current.myPoint.x = value;\n              }\n            }}\n          />\n          <CustomControl\n            name=\"myPoint\"\n            object={customPropsRef.current}\n            prop={'myPoint'}\n            control={{\n              label: 'Point',\n              step: 0.01,\n              keyScale: 0.1,\n              pointerScale: 0.01,\n              onChange: (value: any) => {\n                setCustomControlXY({ ...value });\n                customPropsRef.current.myNumber = value.x;\n              }\n            }}\n          />\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["g","n","t","o","i","j","a","h","T","e","p","d","f","w","u","z","s","M","r","y","C","H","O","S","B","R","l","D","v","b","L","E","X","W","k","CanvasImpl","ref","children","fallback","resize","style","gl","events","createPointerEvents","eventSource","eventPrefix","shadows","linear","flat","legacy","orthographic","frameloop","dpr","performance","raycaster","camera","scene","onPointerMissed","onCreated","props","React.useMemo","extend","THREE","Bridge","useBridge","containerRef","containerRect","useMeasure","canvasRef","React.useRef","divRef","React.useImperativeHandle","handlePointerMissed","useMutableCallback","block","setBlock","React.useState","error","setError","root","useIsomorphicLayoutEffect","canvas","createRoot","run","args","state","isRef","event","x","jsx","ErrorBoundary","React.Suspense","Block","React.useEffect","unmountComponentAtNode","pointerEvents","Canvas","FiberProvider","TestIndexedCube3Materials","geometry","THREE.BufferGeometry","vertices","THREE.BufferAttribute","indices","materials","THREE.MeshBasicMaterial","cube","THREE.Mesh","group","THREE.Group","pointLight","THREE.PointLight","LightProbeGenerator","cubeTexture","totalWeight","coord","Vector3","dir","color","Color","shBasis","sh","SphericalHarmonics3","shCoefficients","faceIndex","image","width","height","context","imageData","data","imageWidth","pixelSize","il","convertColorToLinear","pixelIndex","col","row","lengthSq","weight","norm","LightProbe","renderer","cubeRenderTarget","flip","WebGLCoordinateSystem","dataType","HalfFloatType","DataUtils","colorSpace","SRGBColorSpace","LinearSRGBColorSpace","NoColorSpace","degToRad","THREE.MathUtils","stats","Stats","shadowMapMaterial","getShadowMapMaterial","Box","refMesh","useRef","hovered","_hover","useState","clicked","_click","map","setMap","alphaMap","setAlphaMap","meshMaterialRef","position","mapURL","alphaMapURL","rest","usePlay","playingState","_state","delta","useEffect","api","textures","jsxs","Experience","clock","useThree","refDirectionalLight","refPointLight","refSpotLight","refLightProbe","doorMaterialRef","cubeCameraRef","webGLCubeRenderTargetRef","THREE.WebGLCubeRenderTarget","customPropsRef","showOthers","setShowOthers","customControlXY","setCustomControlXY","number","setNumber","audioListenerRef","THREE.AudioListener","useFrame","_delta","_playState","_rootState","img","THREE.SRGBColorSpace","texture","THREE.CubeTexture","THREE.CubeRefractionMapping","THREE.EquirectangularRefractionMapping","THREE.UVMapping","mesh","testIndexedCube3Materials","recombinedCube","Fragment","THREE.Color","THREE.DoubleSide","CustomControl","value"],"mappings":"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","x_google_ignoreList":[0,1,3]}