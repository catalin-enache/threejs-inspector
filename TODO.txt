Put panel in a draggable container *DONE*
Allow config for renderer and other things in the panel *DONE*
Check to see what is going on with props defined in react vs changes from panel. *DONE* R3F does deep compare
Add a way to hide/show separately pickers and helpers rather than all gizmos *DONE*
Make a play/stop game loop different from editor loop *DONE*
Improve makeHelpers *DONE*
Make labels expand on hover *DONE*
See if CustomControl can be improved *DONE*
When using different camera on play we might/will need different controller *DONE*
Fix keyup not firing when contextmenu in cPanel (keeps hanging fly navigation) *DONE* (preventing contextmenu on cPanel)
Bug: In continuous update in Orbit Controls the scene flickers. *DONE* (because  numberCommon->step was lower than 3 decimals precision)
Bug: After changing texture at runtime the details subfolder does not reflect it. *DONE* (rebuilding the tree manually on change)
Bug: After adding scene background (some large image) some commands in cPanel respond slowly (e.g. ContinuouslyUpdate, changing cameraType or controlType, play/stop) *DONE*
it seems it happens only after change until the texture is being rebuilt.
Bug: When the Scene gets a background from somewhere else, cPanel is not aware until some button click. *DONE*
(in loadImage we ask cPanel to rebuild itself - triggerCPaneStateChanged())
Bug: try playing with offset on Scene background after getting the green texture on it. It feels unresponsive. *DONE* (because texture is updated)
Bug?: The scene moving is not continuous. Is it from the mouse ?
The app has a bit of lag compared to: https://threejs.org/examples/?q=rotation#webgl_materials_texture_rotation which is instant *DONE* (re-rendering on OrbitControls change)
Make possible setting up cPanel opacity from itself so that it can be adjusted at runtime *DONE*
Make a help button and popup with all the shortcuts and explanations *DONE*
Find a way to solve conflict between scene background as texture and as folder *DONE*
The Scene background can be a Texture or Color. Adjust the controller for that. *WNF* (we show the type was has been set)
Allow user to adjust cPanel size the same as for opacity *DONE*
Bug: When hiding cPanel the cPanel draggable line is still visible. *DONE*
Make a type for userData *DONE*
Add controls for textures and materials *DONE*
Include sceneObjects with other props rather than making it separate. *DONE*
Checkout how does it happen that default cameras do not have helpers around them so that we should remove them. *DONE* (default cameras are not added to the scene)
Investigate the cameras being added when changing scene background mapping to rectangular
After they are added why they do  not move when dragged, or at least why the helpers do not move ?
*DONE* (added sub-cameras of CubeCamera to the skip list - it is not useful to have pickers for them. Also note that CubeCamera is not actually added to the scene)

Bug: spruit_sunrise_4k.hdr.jpg not working as cubemap (might need handling like here: webgl_loader_texture_hdrjpg.html) *DONE* (using HDR-JPG loader)
Write doc about loading textures and cubeMaps *DONE*

Bug: on inspecting coffeemat->glb it turns full metallic (WebGL: INVALID_ENUM: compressedTexSubImage2D)
Only happens when in binding helpers we're adding bindings for children.
*DONE* (we were missing a lot of texture format constants for compressed textures)

We should not rebuild the Panel for selected object when playing or changing stuff from Global tab *DONE*
Let's not crash CPanel when selecting an object and textures are missing from materials *DONE*
Not all textures have image(s). We should handle that *Done* in bindingHelpers we're preventing invalid textures now.

Allow setting isInspectable on root and the function should do it recursively automatically, same with castShadow and receiveShadow *DONE*

Some imported objects are too big. We need to scale them down generically compared to the scene. *DONE*

Bug: When using transform sliders and releasing mouse on disabled inputs the control is not released. *DONE*

Allow setting the size for pickers. In some scenes they are too small/big; *DONE*

If we have Custom params in CPanel make the tab selected by default *DONE*

Implement options for importing via input file. (optimize ? autoscale ? geometry ?) *DONE*

Add control for scene fog, and other scene props. *DONE*

See if we can use Custom tab when inspector is injected in the scene. *DONE*

Check ALL_Asian_female.fbx make it indexed and recombine meshes. Observe lots of children (too many). *DONE* (we padded materials wrongly by mesh groups length - now we pad by max materialIndex used)
Check ALL_Asian_female why is rendering slow ? It is a bout a hair mesh.

Check if we remove the mixer for objects removed from the scene. *DONE* (yes, because the mixer is attached to __inspectorData)

Bug: Changing rotation 90deg does not make it 90 but 90.012 *DONE* (expected: because conversion to rad and back to deg, but showing now 1 decimal to hide the difference)

See if we can reproduce CustomControls setup from existing Experience into the native ThreeJs example. *DONE* (yes we can)

Allow with shift + dblclick to select inside object *DONE*

Bug: When loading via http fbx doesn't find textures in subfolder. *DONE*

Handle multiple fbx/gltf imports (when animations or other things are separated) and merge them. *DONE*

See why it takes that long to select a complex object in the scene. Can cPanel be optimised or is it normal? - *DONE* It was due to TexturePlugin (internal mesh creation)

See why after uploading a texture its name is not changed in texture details in inspector.
Also note that texture controls do not work anymore after uploading a new texture. *DONE* (listening now to cPanelStateFake in selected object tab)


Bug: Load Image from CParam then from SceneConfig.
After loading from scene config the binding reader fires continuously.
Not happening anymore since using correct internal lastValue.
However, to test with multi texture bindings later

Why on loading Jenifer the body texture changes luminosity after expanding body texture in CPanel ? *DONE* (because binding ranges did override initial values for IOR )

CubeCamera remove/add cycle adds a new texture each time. This happens in a not cleared scene.
In a cleared scene it doesn't happen.
It is CanvasTexture which is deleted then added back for whatever reason.
*DONE* (because another texture in th scene used directly the shadowMapMaterial custom shader used by TexturePlugin)

Playing with custom controls advances the playing of the scene. Why ?
The same happens when changing the window size.
Related: CustomControls issue with usePlay - not stopping (see Experience)
*DONE* fixed usePlay hook to not call boundCallback for stopped/pause when playingStateChanged is false. also added deps.

setFrameloop('never') conflicts with usePlay hook.
*DONE* usePlay just overrides 'never' to 'always'

Add a button on the scene panel to update CubeCameras on demand. *DONE*


Remove everything from the scene and check geometries in scene renderer info, They should be 0.
*DONE* they cannot be 0 due to internals of three, but they do not leak.

In 'demand' mode we still need to allow object changes from CPanel to be reflected in the scene.
*DONE* by adding change listeners on specific folders.

TransformControls add their own geometry every cycle.
Probably for better to remove TransformControls from the scene when not needed?
*DONE*


When loading CubeCamera no longer in the scene but still in memory. TransformControls are complaining.
Does not happen with other objects like DirectionalLight.
*DONE*


Why changing camera switches from frameloop demand to always
*DONE* fixed in hooks useDefaultSetup by setting it back how it was after camera update

Rename loadModel function and file to loadObject *DONE*

Make position change in CPanel be in relation with scene size.
*DONE*

When the angle is capped, continue dragging still adds offset
that needs to be countered with moving back the mouse the same amount
*DONE* added minPitch and maxPitch to limit the pitch angle


With injected scene, in Scene tab => camera current section, controls do not influence the camera
Found reason: camera is controlled by CameraControls.
Must either disable position/rotation for that case or target the CameraControls.
*DONE* (enhanced FlyControls and removed support for OrbitControls)

CameraControls need to work with 'demand' frameloop as well.
CameraControls works now on demand when CPanel is set to continuously update (a happy coincidence it looks like).
*DONE* improved CameraControls to work with demand frameloop.

Make Inspector toggleable by clicking on the drag bar.
*DONE*

Cannot load JSON saved scene. It raises error.
*DONE* not calculating anymore scene size until isSafeToMakeHelpers (deferring in LoadObjectForm)

Scene BBox is not calculated correct for Jennifer imported as JSON until selecting a random object from scene
*DONE* added object.updateMatrixWorld(); before Box3 setFromObject in getSceneBoundingBoxSize


Deleting an object does not delete all geometries/textures - this should have been fixed, confirm.
When deleting all objects manually geometries and textures are not cleaned up the same way as when clearing the scene.

When dragging TransformControls frameloop is switched to always.
*DONE* it happens because the app is re-rendered when listening to TransformControls change and the frameloop is overridden by the app at re-render.

Make sure we can use Experience and lib helpers without patchingThree or without using Setup and Inspector
*DONE*

Add experience switcher in CPanel to easy switch between available experiences
*DONE*

make util pagesSwitcher for both native and R3F
*DONE* added api.setProjects


make util useStats for native the same as useStats hook for R3F
*DONE* added api.injectStats

When deleting an object through inspector raise a confirmation dialog asking what to destroy.
*DONE*



ssh-add ~/.ssh/id_ed25519





Make a use case (Scenario) where user wants to test textures on some object using different material templates.



Add an object/scene save and load button using three serialization (be able to chose JSON serialization type).
Related: Check imported json objects not respecting scene scale from LoadObjectForm
Add tests for changes related to serialization and download/loadObject changes.


Allow loading more json objects in the scene and save/load them.


Add scene navigator (top/bottom/left/right) from threejs editor
Show scene performance and statistics
Add top/left/bottom/right panel options (note: existing implementations are buggy - are they ?) - we already have 1,7,3,9 on numeric pad for this.

Could we add a use_pmremGenerator bool to inspector ?

Show loaders when loading stuff as well as when building bindings
Add loaders so that we can start the scene after everything was loaded.

Maybe we can make the modal a non React component to use it in React rather than the other way around as we do it now.



Implement typing multiple letters as key listeners?

Can we make an approach to share textures and materials between objects? (this is good for sharing envMap)

Add optimization such that when importing a new object
if textures are already loaded (lookup by name) they are not loaded again (use already loaded ones).

Test with WebGPURenderer (for now R3F does not support it)

Write doc about loading models.

Maybe allow saving as gltf ???

Allow adding primitive objects (box, sphere, plane, cylinder) to the scene. ???

Allow having scripts scripting along with a json project ???

Allow seeing bounding boxes and spheres for objects.
Use other helpers provided by ThreeJs (for seeing normals, tangents, see the helpers in the library)
Note: normals helper, BoxHelper are not behaving as expected (not following animations, need custom implementation)


Implement snapping

See the hair for some characters, why not rendering nice ?

The colors are different between gltf and fbx (see test_multi_features)

Bug: FBXLoader: DDS loader not found for Modular Military Character fbx. (maybe a dds re-export would fix it)

Handle the case where gltf comes with lights (LightsPunctualLamp.glb)

Test matcap

Be able to load complete materials from folder based on textures name and add a material load button

See where kandao3_depthmap.jpg is used in threejs examples

Do experiment with scene background reflection and object material reflection/refraction
// https://threejs.org/examples/#webgl_materials_cubemap_refraction


Add FPS widget // https://threejs.org/examples/#webgl_materials_cubemap_refraction
Integrate with Default LoadingManager.
Allow cors for loaders (can this be done with default load  manager ?)


Add plugin for Animations
Add plugin for Layers
Add plugin for radio buttons
Add plugin for file upload (Texture, CubeTexture and Mesh and everything)
Add text display plugin; to be used in showing quaternion, userData and other readonly fields


Cleanup package.json

Normalize all handlers to pointer instead of mouse ? Not sure if needed.

Need another kind of serialization to be done later on a real project.

