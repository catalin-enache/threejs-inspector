import{_ as Ge}from"./index-C-jAMs-c.js";const Xe=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),Qe=(()=>{const e=Object.getOwnPropertyDescriptor(Object.getPrototypeOf(Uint8Array.prototype),Symbol.toStringTag).get;return t=>e.call(t)})();function it(e){return Qe(e)==="Uint8Array"}function vt(e){return typeof e=="object"&&e!=null&&Symbol.toStringTag in e&&(e[Symbol.toStringTag]==="ArrayBuffer"||e[Symbol.toStringTag]==="SharedArrayBuffer")}function st(e){return e instanceof RegExp||Object.prototype.toString.call(e)==="[object RegExp]"}function te(e){return typeof e=="object"&&e!=null&&Symbol.toStringTag in e&&e[Symbol.toStringTag]==="Map"}function ot(e){return e instanceof Date||Object.prototype.toString.call(e)==="[object Date]"}function x(e,t){return JSON.stringify(e,(r,n)=>typeof n=="bigint"?{$numberLong:`${n}`}:te(n)?Object.fromEntries(n):n)}function ve(e){if(e!=null&&typeof e=="object"&&"stylize"in e&&typeof e.stylize=="function")return e.stylize}const et=6,ht=Symbol.for("@@mdb.bson.version"),St=2147483647,Bt=-2147483648,Oe=Math.pow(2,63)-1,de=-Math.pow(2,63),Te=Math.pow(2,53),Ie=-Math.pow(2,53),ee=1,$e=2,ne=3,Ae=4,re=5,tn=6,_e=7,Ue=8,Re=9,ie=10,Tt=11,en=12,se=13,Le=14,De=15,pt=16,ze=17,oe=18,Me=19,Fe=255,xe=127,nn=0,fe=4,rn=Object.freeze({double:1,string:2,object:3,array:4,binData:5,undefined:6,objectId:7,bool:8,date:9,null:10,regex:11,dbPointer:12,javascript:13,symbol:14,javascriptWithScope:15,int:16,timestamp:17,long:18,decimal:19,minKey:-1,maxKey:127});class c extends Error{get bsonError(){return!0}get name(){return"BSONError"}constructor(t,r){super(t,r)}static isBSONError(t){return t!=null&&typeof t=="object"&&"bsonError"in t&&t.bsonError===!0&&"name"in t&&"message"in t&&"stack"in t}}class ct extends c{get name(){return"BSONVersionError"}constructor(){super(`Unsupported BSON version, bson types must be from bson ${et}.x.x`)}}class Qt extends c{get name(){return"BSONRuntimeError"}constructor(t){super(t)}}class q extends c{get name(){return"BSONOffsetError"}constructor(t,r,n){super(`${t}. offset: ${r}`,n),this.offset=r}}let le,he;function Pe(e,t,r,n){if(n){le??=new TextDecoder("utf8",{fatal:!0});try{return le.decode(e.subarray(t,r))}catch(i){throw new c("Invalid UTF-8 string in BSON document",{cause:i})}}return he??=new TextDecoder("utf8",{fatal:!1}),he.decode(e.subarray(t,r))}function je(e,t,r){if(e.length===0)return"";const n=r-t;if(n===0)return"";if(n>20)return null;if(n===1&&e[t]<128)return String.fromCharCode(e[t]);if(n===2&&e[t]<128&&e[t+1]<128)return String.fromCharCode(e[t])+String.fromCharCode(e[t+1]);if(n===3&&e[t]<128&&e[t+1]<128&&e[t+2]<128)return String.fromCharCode(e[t])+String.fromCharCode(e[t+1])+String.fromCharCode(e[t+2]);const i=[];for(let s=t;s<r;s++){const u=e[s];if(u>127)return null;i.push(u)}return String.fromCharCode(...i)}function sn(e,t,r){if(t.length===0)return 0;if(t.length>25||e.length-r<t.length)return null;for(let n=0,i=r;n<t.length;n++,i++){const s=t.charCodeAt(n);if(s>127)return null;e[i]=s}return t.length}function on(e){return Z.fromNumberArray(Array.from({length:e},()=>Math.floor(Math.random()*256)))}const fn=await(async()=>{try{return(await Ge(async()=>{const{randomBytes:e}=await Promise.resolve().then(()=>Xe);return{randomBytes:e}},void 0,import.meta.url)).randomBytes}catch{return on}})(),Z={toLocalBufferType(e){if(Buffer.isBuffer(e))return e;if(ArrayBuffer.isView(e))return Buffer.from(e.buffer,e.byteOffset,e.byteLength);const t=e?.[Symbol.toStringTag]??Object.prototype.toString.call(e);if(t==="ArrayBuffer"||t==="SharedArrayBuffer"||t==="[object ArrayBuffer]"||t==="[object SharedArrayBuffer]")return Buffer.from(e);throw new c("Cannot create Buffer from the passed potentialBuffer.")},allocate(e){return Buffer.alloc(e)},allocateUnsafe(e){return Buffer.allocUnsafe(e)},equals(e,t){return Z.toLocalBufferType(e).equals(t)},fromNumberArray(e){return Buffer.from(e)},fromBase64(e){return Buffer.from(e,"base64")},toBase64(e){return Z.toLocalBufferType(e).toString("base64")},fromISO88591(e){return Buffer.from(e,"binary")},toISO88591(e){return Z.toLocalBufferType(e).toString("binary")},fromHex(e){return Buffer.from(e,"hex")},toHex(e){return Z.toLocalBufferType(e).toString("hex")},toUTF8(e,t,r,n){const i=r-t<=20?je(e,t,r):null;if(i!=null)return i;const s=Z.toLocalBufferType(e).toString("utf8",t,r);if(n){for(let u=0;u<s.length;u++)if(s.charCodeAt(u)===65533){Pe(e,t,r,!0);break}}return s},utf8ByteLength(e){return Buffer.byteLength(e,"utf8")},encodeUTF8Into(e,t,r){const n=sn(e,t,r);return n??Z.toLocalBufferType(e).write(t,r,void 0,"utf8")},randomBytes:fn,swap32(e){return Z.toLocalBufferType(e).swap32()}};function ln(){const{navigator:e}=globalThis;return typeof e=="object"&&e.product==="ReactNative"}function hn(e){if(e<0)throw new RangeError(`The argument 'byteLength' is invalid. Received ${e}`);return bt.fromNumberArray(Array.from({length:e},()=>Math.floor(Math.random()*256)))}const cn=(()=>{const{crypto:e}=globalThis;if(e!=null&&typeof e.getRandomValues=="function")return t=>e.getRandomValues(bt.allocate(t));if(ln()){const{console:t}=globalThis;t?.warn?.("BSON: For React Native please polyfill crypto.getRandomValues, e.g. using: https://www.npmjs.com/package/react-native-get-random-values.")}return hn})(),ce=/(\d|[a-f])/i,bt={toLocalBufferType(e){const t=e?.[Symbol.toStringTag]??Object.prototype.toString.call(e);if(t==="Uint8Array")return e;if(ArrayBuffer.isView(e))return new Uint8Array(e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength));if(t==="ArrayBuffer"||t==="SharedArrayBuffer"||t==="[object ArrayBuffer]"||t==="[object SharedArrayBuffer]")return new Uint8Array(e);throw new c("Cannot make a Uint8Array from passed potentialBuffer.")},allocate(e){if(typeof e!="number")throw new TypeError(`The "size" argument must be of type number. Received ${String(e)}`);return new Uint8Array(e)},allocateUnsafe(e){return bt.allocate(e)},equals(e,t){if(e.byteLength!==t.byteLength)return!1;for(let r=0;r<e.byteLength;r++)if(e[r]!==t[r])return!1;return!0},fromNumberArray(e){return Uint8Array.from(e)},fromBase64(e){return Uint8Array.from(atob(e),t=>t.charCodeAt(0))},toBase64(e){return btoa(bt.toISO88591(e))},fromISO88591(e){return Uint8Array.from(e,t=>t.charCodeAt(0)&255)},toISO88591(e){return Array.from(Uint16Array.from(e),t=>String.fromCharCode(t)).join("")},fromHex(e){const t=e.length%2===0?e:e.slice(0,e.length-1),r=[];for(let n=0;n<t.length;n+=2){const i=t[n],s=t[n+1];if(!ce.test(i)||!ce.test(s))break;const u=Number.parseInt(`${i}${s}`,16);r.push(u)}return Uint8Array.from(r)},toHex(e){return Array.from(e,t=>t.toString(16).padStart(2,"0")).join("")},toUTF8(e,t,r,n){const i=r-t<=20?je(e,t,r):null;return i??Pe(e,t,r,n)},utf8ByteLength(e){return new TextEncoder().encode(e).byteLength},encodeUTF8Into(e,t,r){const n=new TextEncoder().encode(t);return e.set(n,r),n.byteLength},randomBytes:cn,swap32(e){if(e.length%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e.length;t+=4){const r=e[t],n=e[t+1],i=e[t+2],s=e[t+3];e[t]=s,e[t+1]=i,e[t+2]=n,e[t+3]=r}return e}},un=typeof Buffer=="function"&&Buffer.prototype?._isBuffer!==!0,h=un?Z:bt;class P{get[ht](){return et}[Symbol.for("nodejs.util.inspect.custom")](t,r,n){return this.inspect(t,r,n)}}const ft=new Float64Array(1),_=new Uint8Array(ft.buffer,0,8);ft[0]=-1;const $t=_[7]===0,d={isBigEndian:$t,getNonnegativeInt32LE(e,t){if(e[t+3]>127)throw new RangeError(`Size cannot be negative at offset: ${t}`);return e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24},getInt32LE(e,t){return e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24},getUint32LE(e,t){return e[t]+e[t+1]*256+e[t+2]*65536+e[t+3]*16777216},getUint32BE(e,t){return e[t+3]+e[t+2]*256+e[t+1]*65536+e[t]*16777216},getBigInt64LE(e,t){const r=BigInt(e[t+4]+e[t+5]*256+e[t+6]*65536+(e[t+7]<<24)),n=BigInt(e[t]+e[t+1]*256+e[t+2]*65536+e[t+3]*16777216);return(r<<BigInt(32))+n},getFloat64LE:$t?(e,t)=>(_[7]=e[t],_[6]=e[t+1],_[5]=e[t+2],_[4]=e[t+3],_[3]=e[t+4],_[2]=e[t+5],_[1]=e[t+6],_[0]=e[t+7],ft[0]):(e,t)=>(_[0]=e[t],_[1]=e[t+1],_[2]=e[t+2],_[3]=e[t+3],_[4]=e[t+4],_[5]=e[t+5],_[6]=e[t+6],_[7]=e[t+7],ft[0]),setInt32BE(e,t,r){return e[t+3]=r,r>>>=8,e[t+2]=r,r>>>=8,e[t+1]=r,r>>>=8,e[t]=r,4},setInt32LE(e,t,r){return e[t]=r,r>>>=8,e[t+1]=r,r>>>=8,e[t+2]=r,r>>>=8,e[t+3]=r,4},setBigInt64LE(e,t,r){const n=BigInt(4294967295);let i=Number(r&n);e[t]=i,i>>=8,e[t+1]=i,i>>=8,e[t+2]=i,i>>=8,e[t+3]=i;let s=Number(r>>BigInt(32)&n);return e[t+4]=s,s>>=8,e[t+5]=s,s>>=8,e[t+6]=s,s>>=8,e[t+7]=s,8},setFloat64LE:$t?(e,t,r)=>(ft[0]=r,e[t]=_[7],e[t+1]=_[6],e[t+2]=_[5],e[t+3]=_[4],e[t+4]=_[3],e[t+5]=_[2],e[t+6]=_[1],e[t+7]=_[0],8):(e,t,r)=>(ft[0]=r,e[t]=_[0],e[t+1]=_[1],e[t+2]=_[2],e[t+3]=_[3],e[t+4]=_[4],e[t+5]=_[5],e[t+6]=_[6],e[t+7]=_[7],8)};class E extends P{get _bsontype(){return"Binary"}constructor(t,r){if(super(),t!=null&&typeof t=="string"&&!ArrayBuffer.isView(t)&&!vt(t)&&!Array.isArray(t))throw new c("Binary can only be constructed from Uint8Array or number[]");this.sub_type=r??E.BSON_BINARY_SUBTYPE_DEFAULT,t==null?(this.buffer=h.allocate(E.BUFFER_SIZE),this.position=0):(this.buffer=Array.isArray(t)?h.fromNumberArray(t):h.toLocalBufferType(t),this.position=this.buffer.byteLength)}put(t){if(typeof t=="string"&&t.length!==1)throw new c("only accepts single character String");if(typeof t!="number"&&t.length!==1)throw new c("only accepts single character Uint8Array or Array");let r;if(typeof t=="string"?r=t.charCodeAt(0):typeof t=="number"?r=t:r=t[0],r<0||r>255)throw new c("only accepts number in a valid unsigned byte range 0-255");if(this.buffer.byteLength>this.position)this.buffer[this.position++]=r;else{const n=h.allocate(E.BUFFER_SIZE+this.buffer.length);n.set(this.buffer,0),this.buffer=n,this.buffer[this.position++]=r}}write(t,r){if(r=typeof r=="number"?r:this.position,this.buffer.byteLength<r+t.length){const n=h.allocate(this.buffer.byteLength+t.length);n.set(this.buffer,0),this.buffer=n}if(ArrayBuffer.isView(t))this.buffer.set(h.toLocalBufferType(t),r),this.position=r+t.byteLength>this.position?r+t.length:this.position;else if(typeof t=="string")throw new c("input cannot be string")}read(t,r){r=r&&r>0?r:this.position;const n=t+r;return this.buffer.subarray(t,n>this.position?this.position:n)}value(){return this.buffer.length===this.position?this.buffer:this.buffer.subarray(0,this.position)}length(){return this.position}toJSON(){return h.toBase64(this.buffer.subarray(0,this.position))}toString(t){return t==="hex"?h.toHex(this.buffer.subarray(0,this.position)):t==="base64"?h.toBase64(this.buffer.subarray(0,this.position)):t==="utf8"||t==="utf-8"?h.toUTF8(this.buffer,0,this.position,!1):h.toUTF8(this.buffer,0,this.position,!1)}toExtendedJSON(t){t=t||{},this.sub_type===E.SUBTYPE_VECTOR&&Ce(this);const r=h.toBase64(this.buffer),n=Number(this.sub_type).toString(16);return t.legacy?{$binary:r,$type:n.length===1?"0"+n:n}:{$binary:{base64:r,subType:n.length===1?"0"+n:n}}}toUUID(){if(this.sub_type===E.SUBTYPE_UUID)return new M(this.buffer.subarray(0,this.position));throw new c(`Binary sub_type "${this.sub_type}" is not supported for converting to UUID. Only "${E.SUBTYPE_UUID}" is currently supported.`)}static createFromHexString(t,r){return new E(h.fromHex(t),r)}static createFromBase64(t,r){return new E(h.fromBase64(t),r)}static fromExtendedJSON(t,r){r=r||{};let n,i;if("$binary"in t?r.legacy&&typeof t.$binary=="string"&&"$type"in t?(i=t.$type?parseInt(t.$type,16):0,n=h.fromBase64(t.$binary)):typeof t.$binary!="string"&&(i=t.$binary.subType?parseInt(t.$binary.subType,16):0,n=h.fromBase64(t.$binary.base64)):"$uuid"in t&&(i=4,n=M.bytesFromString(t.$uuid)),!n)throw new c(`Unexpected Binary Extended JSON format ${JSON.stringify(t)}`);return i===fe?new M(n):new E(n,i)}inspect(t,r,n){n??=x;const i=h.toBase64(this.buffer.subarray(0,this.position)),s=n(i,r),u=n(this.sub_type,r);return`Binary.createFromBase64(${s}, ${u})`}toInt8Array(){if(this.sub_type!==E.SUBTYPE_VECTOR)throw new c("Binary sub_type is not Vector");if(this.buffer[0]!==E.VECTOR_TYPE.Int8)throw new c("Binary datatype field is not Int8");return new Int8Array(this.buffer.buffer.slice(this.buffer.byteOffset+2,this.buffer.byteOffset+this.position))}toFloat32Array(){if(this.sub_type!==E.SUBTYPE_VECTOR)throw new c("Binary sub_type is not Vector");if(this.buffer[0]!==E.VECTOR_TYPE.Float32)throw new c("Binary datatype field is not Float32");const t=new Uint8Array(this.buffer.buffer.slice(this.buffer.byteOffset+2,this.buffer.byteOffset+this.position));return d.isBigEndian&&h.swap32(t),new Float32Array(t.buffer)}toPackedBits(){if(this.sub_type!==E.SUBTYPE_VECTOR)throw new c("Binary sub_type is not Vector");if(this.buffer[0]!==E.VECTOR_TYPE.PackedBit)throw new c("Binary datatype field is not packed bit");return new Uint8Array(this.buffer.buffer.slice(this.buffer.byteOffset+2,this.buffer.byteOffset+this.position))}toBits(){if(this.sub_type!==E.SUBTYPE_VECTOR)throw new c("Binary sub_type is not Vector");if(this.buffer[0]!==E.VECTOR_TYPE.PackedBit)throw new c("Binary datatype field is not packed bit");const r=(this.length()-2)*8-this.buffer[1],n=new Int8Array(r);for(let i=0;i<n.length;i++){const s=i/8|0,u=this.buffer[s+2],a=7-i%8,o=u>>a&1;n[i]=o}return n}static fromInt8Array(t){const r=h.allocate(t.byteLength+2);r[0]=E.VECTOR_TYPE.Int8,r[1]=0;const n=new Uint8Array(t.buffer,t.byteOffset,t.byteLength);return r.set(n,2),new this(r,this.SUBTYPE_VECTOR)}static fromFloat32Array(t){const r=h.allocate(t.byteLength+2);r[0]=E.VECTOR_TYPE.Float32,r[1]=0;const n=new Uint8Array(t.buffer,t.byteOffset,t.byteLength);return r.set(n,2),d.isBigEndian&&h.swap32(new Uint8Array(r.buffer,2)),new this(r,this.SUBTYPE_VECTOR)}static fromPackedBits(t,r=0){const n=h.allocate(t.byteLength+2);return n[0]=E.VECTOR_TYPE.PackedBit,n[1]=r,n.set(t,2),new this(n,this.SUBTYPE_VECTOR)}static fromBits(t){const r=t.length+7>>>3,n=new Uint8Array(r+2);n[0]=E.VECTOR_TYPE.PackedBit;const i=t.length%8;n[1]=i===0?0:8-i;for(let s=0;s<t.length;s++){const u=s>>>3,a=t[s];if(a!==0&&a!==1)throw new c(`Invalid bit value at ${s}: must be 0 or 1, found ${t[s]}`);if(a===0)continue;const o=7-s%8;n[u+2]|=a<<o}return new this(n,E.SUBTYPE_VECTOR)}}E.BSON_BINARY_SUBTYPE_DEFAULT=0;E.BUFFER_SIZE=256;E.SUBTYPE_DEFAULT=0;E.SUBTYPE_FUNCTION=1;E.SUBTYPE_BYTE_ARRAY=2;E.SUBTYPE_UUID_OLD=3;E.SUBTYPE_UUID=4;E.SUBTYPE_MD5=5;E.SUBTYPE_ENCRYPTED=6;E.SUBTYPE_COLUMN=7;E.SUBTYPE_SENSITIVE=8;E.SUBTYPE_VECTOR=9;E.SUBTYPE_USER_DEFINED=128;E.VECTOR_TYPE=Object.freeze({Int8:3,Float32:39,PackedBit:16});function Ce(e){if(e.sub_type!==E.SUBTYPE_VECTOR)return;const t=e.position,r=e.buffer[0],n=e.buffer[1];if((r===E.VECTOR_TYPE.Float32||r===E.VECTOR_TYPE.Int8)&&n!==0)throw new c("Invalid Vector: padding must be zero for int8 and float32 vectors");if(r===E.VECTOR_TYPE.PackedBit&&n!==0&&t===2)throw new c("Invalid Vector: padding must be zero for packed bit vectors that are empty");if(r===E.VECTOR_TYPE.PackedBit&&n>7)throw new c(`Invalid Vector: padding must be a value between 0 and 7. found: ${n}`)}const At=16,an=/^[0-9A-F]{32}$/i,gn=/^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i;class M extends E{constructor(t){let r;if(t==null)r=M.generate();else if(t instanceof M)r=h.toLocalBufferType(new Uint8Array(t.buffer));else if(ArrayBuffer.isView(t)&&t.byteLength===At)r=h.toLocalBufferType(t);else if(typeof t=="string")r=M.bytesFromString(t);else throw new c("Argument passed in UUID constructor must be a UUID, a 16 byte Buffer or a 32/36 character hex string (dashes excluded/included, format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).");super(r,fe)}get id(){return this.buffer}set id(t){this.buffer=t}toHexString(t=!0){return t?[h.toHex(this.buffer.subarray(0,4)),h.toHex(this.buffer.subarray(4,6)),h.toHex(this.buffer.subarray(6,8)),h.toHex(this.buffer.subarray(8,10)),h.toHex(this.buffer.subarray(10,16))].join("-"):h.toHex(this.buffer)}toString(t){return t==="hex"?h.toHex(this.id):t==="base64"?h.toBase64(this.id):this.toHexString()}toJSON(){return this.toHexString()}equals(t){if(!t)return!1;if(t instanceof M)return h.equals(t.id,this.id);try{return h.equals(new M(t).id,this.id)}catch{return!1}}toBinary(){return new E(this.id,E.SUBTYPE_UUID)}static generate(){const t=h.randomBytes(At);return t[6]=t[6]&15|64,t[8]=t[8]&63|128,t}static isValid(t){return t?typeof t=="string"?M.isValidUUIDString(t):it(t)?t.byteLength===At:t._bsontype==="Binary"&&t.sub_type===this.SUBTYPE_UUID&&t.buffer.byteLength===16:!1}static createFromHexString(t){const r=M.bytesFromString(t);return new M(r)}static createFromBase64(t){return new M(h.fromBase64(t))}static bytesFromString(t){if(!M.isValidUUIDString(t))throw new c("UUID string representation must be 32 hex digits or canonical hyphenated representation");return h.fromHex(t.replace(/-/g,""))}static isValidUUIDString(t){return an.test(t)||gn.test(t)}inspect(t,r,n){return n??=x,`new UUID(${n(this.toHexString(),r)})`}}class Q extends P{get _bsontype(){return"Code"}constructor(t,r){super(),this.code=t.toString(),this.scope=r??null}toJSON(){return this.scope!=null?{code:this.code,scope:this.scope}:{code:this.code}}toExtendedJSON(){return this.scope?{$code:this.code,$scope:this.scope}:{$code:this.code}}static fromExtendedJSON(t){return new Q(t.$code,t.$scope)}inspect(t,r,n){n??=x;let i=n(this.code,r);const s=i.includes(`
`);this.scope!=null&&(i+=`,${s?`
`:" "}${n(this.scope,r)}`);const u=s&&this.scope===null;return`new Code(${s?`
`:""}${i}${u?`
`:""})`}}function Ve(e){return e!=null&&typeof e=="object"&&"$id"in e&&e.$id!=null&&"$ref"in e&&typeof e.$ref=="string"&&(!("$db"in e)||"$db"in e&&typeof e.$db=="string")}class G extends P{get _bsontype(){return"DBRef"}constructor(t,r,n,i){super();const s=t.split(".");s.length===2&&(n=s.shift(),t=s.shift()),this.collection=t,this.oid=r,this.db=n,this.fields=i||{}}get namespace(){return this.collection}set namespace(t){this.collection=t}toJSON(){const t=Object.assign({$ref:this.collection,$id:this.oid},this.fields);return this.db!=null&&(t.$db=this.db),t}toExtendedJSON(t){t=t||{};let r={$ref:this.collection,$id:this.oid};return t.legacy||(this.db&&(r.$db=this.db),r=Object.assign(r,this.fields)),r}static fromExtendedJSON(t){const r=Object.assign({},t);return delete r.$ref,delete r.$id,delete r.$db,new G(t.$ref,t.$id,t.$db,r)}inspect(t,r,n){n??=x;const i=[n(this.namespace,r),n(this.oid,r),...this.db?[n(this.db,r)]:[],...Object.keys(this.fields).length>0?[n(this.fields,r)]:[]];return i[1]=n===x?`new ObjectId(${i[1]})`:i[1],`new DBRef(${i.join(", ")})`}}function Ye(e){if(e==="")return e;let t=0;const r=e[t]==="-",n=e[t]==="+";(n||r)&&(t+=1);let i=!1;for(;t<e.length&&e[t]==="0";++t)i=!0;return i?`${r?"-":""}${e.length===t?"0":e.slice(t)}`:n?e.slice(1):e}function yn(e,t){t=t??10;const r="0123456789abcdefghijklmnopqrstuvwxyz".slice(0,t);return new RegExp(`[^-+${r}]`,"i").test(e)?!1:e}let C;try{C=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}const ue=65536,mn=1<<24,lt=ue*ue,Je=lt*lt,wn=Je/2,ae={},ge={},pn=20,bn=/^(\+?0|(\+|-)?[1-9][0-9]*)$/;class f extends P{get _bsontype(){return"Long"}get __isLong__(){return!0}constructor(t=0,r,n){super();const i=typeof r=="boolean"?r:!!n,s=typeof r=="number"?r:0,u=typeof t=="string"?f.fromString(t,i):typeof t=="bigint"?f.fromBigInt(t,i):{low:t|0,high:s|0,unsigned:i};this.low=u.low,this.high=u.high,this.unsigned=u.unsigned}static fromBits(t,r,n){return new f(t,r,n)}static fromInt(t,r){let n,i,s;return r?(t>>>=0,(s=0<=t&&t<256)&&(i=ge[t],i)?i:(n=f.fromBits(t,(t|0)<0?-1:0,!0),s&&(ge[t]=n),n)):(t|=0,(s=-128<=t&&t<128)&&(i=ae[t],i)?i:(n=f.fromBits(t,t<0?-1:0,!1),s&&(ae[t]=n),n))}static fromNumber(t,r){if(isNaN(t))return r?f.UZERO:f.ZERO;if(r){if(t<0)return f.UZERO;if(t>=Je)return f.MAX_UNSIGNED_VALUE}else{if(t<=-9223372036854776e3)return f.MIN_VALUE;if(t+1>=wn)return f.MAX_VALUE}return t<0?f.fromNumber(-t,r).neg():f.fromBits(t%lt|0,t/lt|0,r)}static fromBigInt(t,r){const n=BigInt(4294967295),i=BigInt(32);return new f(Number(t&n),Number(t>>i&n),r)}static _fromString(t,r,n){if(t.length===0)throw new c("empty string");if(n<2||36<n)throw new c("radix");let i;if((i=t.indexOf("-"))>0)throw new c("interior hyphen");if(i===0)return f._fromString(t.substring(1),r,n).neg();const s=f.fromNumber(Math.pow(n,8));let u=f.ZERO;for(let a=0;a<t.length;a+=8){const o=Math.min(8,t.length-a),N=parseInt(t.substring(a,a+o),n);if(o<8){const y=f.fromNumber(Math.pow(n,o));u=u.mul(y).add(f.fromNumber(N))}else u=u.mul(s),u=u.add(f.fromNumber(N))}return u.unsigned=r,u}static fromStringStrict(t,r,n){let i=!1;if(typeof r=="number"?(n=r,r=!1):i=!!r,n??=10,t.trim()!==t)throw new c(`Input: '${t}' contains leading and/or trailing whitespace`);if(!yn(t,n))throw new c(`Input: '${t}' contains invalid characters for radix: ${n}`);const s=Ye(t),u=f._fromString(s,i,n);if(u.toString(n).toLowerCase()!==s.toLowerCase())throw new c(`Input: ${t} is not representable as ${u.unsigned?"an unsigned":"a signed"} 64-bit Long ${n!=null?`with radix: ${n}`:""}`);return u}static fromString(t,r,n){let i=!1;return typeof r=="number"?(n=r,r=!1):i=!!r,n??=10,t==="NaN"&&n<24||(t==="Infinity"||t==="+Infinity"||t==="-Infinity")&&n<35?f.ZERO:f._fromString(t,i,n)}static fromBytes(t,r,n){return n?f.fromBytesLE(t,r):f.fromBytesBE(t,r)}static fromBytesLE(t,r){return new f(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,r)}static fromBytesBE(t,r){return new f(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],r)}static isLong(t){return t!=null&&typeof t=="object"&&"__isLong__"in t&&t.__isLong__===!0}static fromValue(t,r){return typeof t=="number"?f.fromNumber(t,r):typeof t=="string"?f.fromString(t,r):f.fromBits(t.low,t.high,typeof r=="boolean"?r:t.unsigned)}add(t){f.isLong(t)||(t=f.fromValue(t));const r=this.high>>>16,n=this.high&65535,i=this.low>>>16,s=this.low&65535,u=t.high>>>16,a=t.high&65535,o=t.low>>>16,N=t.low&65535;let y=0,l=0,g=0,p=0;return p+=s+N,g+=p>>>16,p&=65535,g+=i+o,l+=g>>>16,g&=65535,l+=n+a,y+=l>>>16,l&=65535,y+=r+u,y&=65535,f.fromBits(g<<16|p,y<<16|l,this.unsigned)}and(t){return f.isLong(t)||(t=f.fromValue(t)),f.fromBits(this.low&t.low,this.high&t.high,this.unsigned)}compare(t){if(f.isLong(t)||(t=f.fromValue(t)),this.eq(t))return 0;const r=this.isNegative(),n=t.isNegative();return r&&!n?-1:!r&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1}comp(t){return this.compare(t)}divide(t){if(f.isLong(t)||(t=f.fromValue(t)),t.isZero())throw new c("division by zero");if(C){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;const s=(this.unsigned?C.div_u:C.div_s)(this.low,this.high,t.low,t.high);return f.fromBits(s,C.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?f.UZERO:f.ZERO;let r,n,i;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return f.UZERO;if(t.gt(this.shru(1)))return f.UONE;i=f.UZERO}else{if(this.eq(f.MIN_VALUE))return t.eq(f.ONE)||t.eq(f.NEG_ONE)?f.MIN_VALUE:t.eq(f.MIN_VALUE)?f.ONE:(r=this.shr(1).div(t).shl(1),r.eq(f.ZERO)?t.isNegative()?f.ONE:f.NEG_ONE:(n=this.sub(t.mul(r)),i=r.add(n.div(t)),i));if(t.eq(f.MIN_VALUE))return this.unsigned?f.UZERO:f.ZERO;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();i=f.ZERO}for(n=this;n.gte(t);){r=Math.max(1,Math.floor(n.toNumber()/t.toNumber()));const s=Math.ceil(Math.log(r)/Math.LN2),u=s<=48?1:Math.pow(2,s-48);let a=f.fromNumber(r),o=a.mul(t);for(;o.isNegative()||o.gt(n);)r-=u,a=f.fromNumber(r,this.unsigned),o=a.mul(t);a.isZero()&&(a=f.ONE),i=i.add(a),n=n.sub(o)}return i}div(t){return this.divide(t)}equals(t){return f.isLong(t)||(t=f.fromValue(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low}eq(t){return this.equals(t)}getHighBits(){return this.high}getHighBitsUnsigned(){return this.high>>>0}getLowBits(){return this.low}getLowBitsUnsigned(){return this.low>>>0}getNumBitsAbs(){if(this.isNegative())return this.eq(f.MIN_VALUE)?64:this.neg().getNumBitsAbs();const t=this.high!==0?this.high:this.low;let r;for(r=31;r>0&&(t&1<<r)===0;r--);return this.high!==0?r+33:r+1}greaterThan(t){return this.comp(t)>0}gt(t){return this.greaterThan(t)}greaterThanOrEqual(t){return this.comp(t)>=0}gte(t){return this.greaterThanOrEqual(t)}ge(t){return this.greaterThanOrEqual(t)}isEven(){return(this.low&1)===0}isNegative(){return!this.unsigned&&this.high<0}isOdd(){return(this.low&1)===1}isPositive(){return this.unsigned||this.high>=0}isZero(){return this.high===0&&this.low===0}lessThan(t){return this.comp(t)<0}lt(t){return this.lessThan(t)}lessThanOrEqual(t){return this.comp(t)<=0}lte(t){return this.lessThanOrEqual(t)}modulo(t){if(f.isLong(t)||(t=f.fromValue(t)),C){const r=(this.unsigned?C.rem_u:C.rem_s)(this.low,this.high,t.low,t.high);return f.fromBits(r,C.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))}mod(t){return this.modulo(t)}rem(t){return this.modulo(t)}multiply(t){if(this.isZero())return f.ZERO;if(f.isLong(t)||(t=f.fromValue(t)),C){const S=C.mul(this.low,this.high,t.low,t.high);return f.fromBits(S,C.get_high(),this.unsigned)}if(t.isZero())return f.ZERO;if(this.eq(f.MIN_VALUE))return t.isOdd()?f.MIN_VALUE:f.ZERO;if(t.eq(f.MIN_VALUE))return this.isOdd()?f.MIN_VALUE:f.ZERO;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(f.TWO_PWR_24)&&t.lt(f.TWO_PWR_24))return f.fromNumber(this.toNumber()*t.toNumber(),this.unsigned);const r=this.high>>>16,n=this.high&65535,i=this.low>>>16,s=this.low&65535,u=t.high>>>16,a=t.high&65535,o=t.low>>>16,N=t.low&65535;let y=0,l=0,g=0,p=0;return p+=s*N,g+=p>>>16,p&=65535,g+=i*N,l+=g>>>16,g&=65535,g+=s*o,l+=g>>>16,g&=65535,l+=n*N,y+=l>>>16,l&=65535,l+=i*o,y+=l>>>16,l&=65535,l+=s*a,y+=l>>>16,l&=65535,y+=r*N+n*o+i*a+s*u,y&=65535,f.fromBits(g<<16|p,y<<16|l,this.unsigned)}mul(t){return this.multiply(t)}negate(){return!this.unsigned&&this.eq(f.MIN_VALUE)?f.MIN_VALUE:this.not().add(f.ONE)}neg(){return this.negate()}not(){return f.fromBits(~this.low,~this.high,this.unsigned)}notEquals(t){return!this.equals(t)}neq(t){return this.notEquals(t)}ne(t){return this.notEquals(t)}or(t){return f.isLong(t)||(t=f.fromValue(t)),f.fromBits(this.low|t.low,this.high|t.high,this.unsigned)}shiftLeft(t){return f.isLong(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?f.fromBits(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):f.fromBits(0,this.low<<t-32,this.unsigned)}shl(t){return this.shiftLeft(t)}shiftRight(t){return f.isLong(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?f.fromBits(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):f.fromBits(this.high>>t-32,this.high>=0?0:-1,this.unsigned)}shr(t){return this.shiftRight(t)}shiftRightUnsigned(t){if(f.isLong(t)&&(t=t.toInt()),t&=63,t===0)return this;{const r=this.high;if(t<32){const n=this.low;return f.fromBits(n>>>t|r<<32-t,r>>>t,this.unsigned)}else return t===32?f.fromBits(r,0,this.unsigned):f.fromBits(r>>>t-32,0,this.unsigned)}}shr_u(t){return this.shiftRightUnsigned(t)}shru(t){return this.shiftRightUnsigned(t)}subtract(t){return f.isLong(t)||(t=f.fromValue(t)),this.add(t.neg())}sub(t){return this.subtract(t)}toInt(){return this.unsigned?this.low>>>0:this.low}toNumber(){return this.unsigned?(this.high>>>0)*lt+(this.low>>>0):this.high*lt+(this.low>>>0)}toBigInt(){return BigInt(this.toString())}toBytes(t){return t?this.toBytesLE():this.toBytesBE()}toBytesLE(){const t=this.high,r=this.low;return[r&255,r>>>8&255,r>>>16&255,r>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]}toBytesBE(){const t=this.high,r=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,r>>>24,r>>>16&255,r>>>8&255,r&255]}toSigned(){return this.unsigned?f.fromBits(this.low,this.high,!1):this}toString(t){if(t=t||10,t<2||36<t)throw new c("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(f.MIN_VALUE)){const s=f.fromNumber(t),u=this.div(s),a=u.mul(s).sub(this);return u.toString(t)+a.toInt().toString(t)}else return"-"+this.neg().toString(t);const r=f.fromNumber(Math.pow(t,6),this.unsigned);let n=this,i="";for(;;){const s=n.div(r);let a=(n.sub(s.mul(r)).toInt()>>>0).toString(t);if(n=s,n.isZero())return a+i;for(;a.length<6;)a="0"+a;i=""+a+i}}toUnsigned(){return this.unsigned?this:f.fromBits(this.low,this.high,!0)}xor(t){return f.isLong(t)||(t=f.fromValue(t)),f.fromBits(this.low^t.low,this.high^t.high,this.unsigned)}eqz(){return this.isZero()}le(t){return this.lessThanOrEqual(t)}toExtendedJSON(t){return t&&t.relaxed?this.toNumber():{$numberLong:this.toString()}}static fromExtendedJSON(t,r){const{useBigInt64:n=!1,relaxed:i=!0}={...r};if(t.$numberLong.length>pn)throw new c("$numberLong string is too long");if(!bn.test(t.$numberLong))throw new c(`$numberLong string "${t.$numberLong}" is in an invalid format`);if(n){const u=BigInt(t.$numberLong);return BigInt.asIntN(64,u)}const s=f.fromString(t.$numberLong);return i?s.toNumber():s}inspect(t,r,n){n??=x;const i=n(this.toString(),r),s=this.unsigned?`, ${n(this.unsigned,r)}`:"";return`new Long(${i}${s})`}}f.TWO_PWR_24=f.fromInt(mn);f.MAX_UNSIGNED_VALUE=f.fromBits(-1,-1,!0);f.ZERO=f.fromInt(0);f.UZERO=f.fromInt(0,!0);f.ONE=f.fromInt(1);f.UONE=f.fromInt(1,!0);f.NEG_ONE=f.fromInt(-1);f.MAX_VALUE=f.fromBits(-1,2147483647,!1);f.MIN_VALUE=f.fromBits(0,-2147483648,!1);const Sn=/^(\+|-)?(\d+|(\d*\.\d*))?(E|e)?([-+])?(\d+)?$/,Bn=/^(\+|-)?(Infinity|inf)$/i,Nn=/^(\+|-)?NaN$/i,nt=6111,mt=-6176,ye=6176,me=34,_t=h.fromNumberArray([124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0].reverse()),we=h.fromNumberArray([248,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0].reverse()),pe=h.fromNumberArray([120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0].reverse()),En=/^([-+])?(\d+)?$/,On=31,be=16383,dn=30,Tn=31;function Se(e){return!isNaN(parseInt(e,10))}function In(e){const t=f.fromNumber(1e9);let r=f.fromNumber(0);if(!e.parts[0]&&!e.parts[1]&&!e.parts[2]&&!e.parts[3])return{quotient:e,rem:r};for(let n=0;n<=3;n++)r=r.shiftLeft(32),r=r.add(new f(e.parts[n],0)),e.parts[n]=r.div(t).low,r=r.modulo(t);return{quotient:e,rem:r}}function $n(e,t){if(!e&&!t)return{high:f.fromNumber(0),low:f.fromNumber(0)};const r=e.shiftRightUnsigned(32),n=new f(e.getLowBits(),0),i=t.shiftRightUnsigned(32),s=new f(t.getLowBits(),0);let u=r.multiply(i),a=r.multiply(s);const o=n.multiply(i);let N=n.multiply(s);return u=u.add(a.shiftRightUnsigned(32)),a=new f(a.getLowBits(),0).add(o).add(N.shiftRightUnsigned(32)),u=u.add(a.shiftRightUnsigned(32)),N=a.shiftLeft(32).add(new f(N.getLowBits(),0)),{high:u,low:N}}function An(e,t){const r=e.high>>>0,n=t.high>>>0;if(r<n)return!0;if(r===n){const i=e.low>>>0,s=t.low>>>0;if(i<s)return!0}return!1}function Y(e,t){throw new c(`"${e}" is not a valid Decimal128 string - ${t}`)}class F extends P{get _bsontype(){return"Decimal128"}constructor(t){if(super(),typeof t=="string")this.bytes=F.fromString(t).bytes;else if(t instanceof Uint8Array||it(t)){if(t.byteLength!==16)throw new c("Decimal128 must take a Buffer of 16 bytes");this.bytes=t}else throw new c("Decimal128 must take a Buffer or string")}static fromString(t){return F._fromString(t,{allowRounding:!1})}static fromStringWithRounding(t){return F._fromString(t,{allowRounding:!0})}static _fromString(t,r){let n=!1,i=!1,s=!1,u=!1,a=0,o=0,N=0,y=0,l=0;const g=[0];let p=0,S=0,I=0,U=0,z=new f(0,0),A=new f(0,0),V=0,b=0;if(t.length>=7e3)throw new c(""+t+" not a valid Decimal128 string");const O=t.match(Sn),T=t.match(Bn),W=t.match(Nn);if(!O&&!T&&!W||t.length===0)throw new c(""+t+" not a valid Decimal128 string");if(O){const w=O[2],$=O[4],j=O[5],L=O[6];$&&L===void 0&&Y(t,"missing exponent power"),$&&w===void 0&&Y(t,"missing exponent base"),$===void 0&&(j||L)&&Y(t,"missing e before exponent")}if((t[b]==="+"||t[b]==="-")&&(i=!0,n=t[b++]==="-"),!Se(t[b])&&t[b]!=="."){if(t[b]==="i"||t[b]==="I")return new F(n?we:pe);if(t[b]==="N")return new F(_t)}for(;Se(t[b])||t[b]===".";){if(t[b]==="."){s&&Y(t,"contains multiple periods"),s=!0,b=b+1;continue}p<me&&(t[b]!=="0"||u)&&(u||(l=o),u=!0,g[S++]=parseInt(t[b],10),p=p+1),u&&(N=N+1),s&&(y=y+1),o=o+1,b=b+1}if(s&&!o)throw new c(""+t+" not a valid Decimal128 string");if(t[b]==="e"||t[b]==="E"){const w=t.substr(++b).match(En);if(!w||!w[2])return new F(_t);U=parseInt(w[0],10),b=b+w[0].length}if(t[b])return new F(_t);if(!p)g[0]=0,N=1,p=1,a=0;else if(I=p-1,a=N,a!==1)for(;t[l+a-1+Number(i)+Number(s)]==="0";)a=a-1;for(U<=y&&y>U+16384?U=mt:U=U-y;U>nt;){if(I=I+1,I>=me){if(a===0){U=nt;break}Y(t,"overflow")}U=U-1}if(r.allowRounding){for(;U<mt||p<N;){if(I===0&&a<p){U=mt,a=0;break}if(p<N?N=N-1:I=I-1,U<nt)U=U+1;else{if(g.join("").match(/^0+$/)){U=nt;break}Y(t,"overflow")}}if(I+1<a){let w=o;s&&(l=l+1,w=w+1),i&&(l=l+1,w=w+1);const $=parseInt(t[l+I+1],10);let j=0;if($>=5&&(j=1,$===5)){j=g[I]%2===1?1:0;for(let L=l+I+2;L<w;L++)if(parseInt(t[L],10)){j=1;break}}if(j){let L=I;for(;L>=0&&++g[L]>9;L--)if(g[L]=0,L===0)if(U<nt)U=U+1,g[L]=1;else return new F(n?we:pe)}}}else{for(;U<mt||p<N;){if(I===0){if(a===0){U=mt;break}Y(t,"exponent underflow")}p<N?(t[N-1+Number(i)+Number(s)]!=="0"&&a!==0&&Y(t,"inexact rounding"),N=N-1):(g[I]!==0&&Y(t,"inexact rounding"),I=I-1),U<nt?U=U+1:Y(t,"overflow")}I+1<a&&(s&&(l=l+1),i&&(l=l+1),parseInt(t[l+I+1],10)!==0&&Y(t,"inexact rounding"))}if(z=f.fromNumber(0),A=f.fromNumber(0),a===0)z=f.fromNumber(0),A=f.fromNumber(0);else if(I<17){let w=0;for(A=f.fromNumber(g[w++]),z=new f(0,0);w<=I;w++)A=A.multiply(f.fromNumber(10)),A=A.add(f.fromNumber(g[w]))}else{let w=0;for(z=f.fromNumber(g[w++]);w<=I-17;w++)z=z.multiply(f.fromNumber(10)),z=z.add(f.fromNumber(g[w]));for(A=f.fromNumber(g[w++]);w<=I;w++)A=A.multiply(f.fromNumber(10)),A=A.add(f.fromNumber(g[w]))}const D=$n(z,f.fromString("100000000000000000"));D.low=D.low.add(A),An(D.low,A)&&(D.high=D.high.add(f.fromNumber(1))),V=U+ye;const B={low:f.fromNumber(0),high:f.fromNumber(0)};D.high.shiftRightUnsigned(49).and(f.fromNumber(1)).equals(f.fromNumber(1))?(B.high=B.high.or(f.fromNumber(3).shiftLeft(61)),B.high=B.high.or(f.fromNumber(V).and(f.fromNumber(16383).shiftLeft(47))),B.high=B.high.or(D.high.and(f.fromNumber(0x7fffffffffff)))):(B.high=B.high.or(f.fromNumber(V&16383).shiftLeft(49)),B.high=B.high.or(D.high.and(f.fromNumber(562949953421311)))),B.low=D.low,n&&(B.high=B.high.or(f.fromString("9223372036854775808")));const m=h.allocateUnsafe(16);return b=0,m[b++]=B.low.low&255,m[b++]=B.low.low>>8&255,m[b++]=B.low.low>>16&255,m[b++]=B.low.low>>24&255,m[b++]=B.low.high&255,m[b++]=B.low.high>>8&255,m[b++]=B.low.high>>16&255,m[b++]=B.low.high>>24&255,m[b++]=B.high.low&255,m[b++]=B.high.low>>8&255,m[b++]=B.high.low>>16&255,m[b++]=B.high.low>>24&255,m[b++]=B.high.high&255,m[b++]=B.high.high>>8&255,m[b++]=B.high.high>>16&255,m[b++]=B.high.high>>24&255,new F(m)}toString(){let t,r=0;const n=new Array(36);for(let b=0;b<n.length;b++)n[b]=0;let i=0,s=!1,u,a={parts:[0,0,0,0]},o,N;const y=[];i=0;const l=this.bytes,g=l[i++]|l[i++]<<8|l[i++]<<16|l[i++]<<24,p=l[i++]|l[i++]<<8|l[i++]<<16|l[i++]<<24,S=l[i++]|l[i++]<<8|l[i++]<<16|l[i++]<<24,I=l[i++]|l[i++]<<8|l[i++]<<16|l[i++]<<24;i=0,{low:new f(g,p),high:new f(S,I)}.high.lessThan(f.ZERO)&&y.push("-");const z=I>>26&On;if(z>>3===3){if(z===dn)return y.join("")+"Infinity";if(z===Tn)return"NaN";t=I>>15&be,u=8+(I>>14&1)}else u=I>>14&7,t=I>>17&be;const A=t-ye;if(a.parts[0]=(I&16383)+((u&15)<<14),a.parts[1]=S,a.parts[2]=p,a.parts[3]=g,a.parts[0]===0&&a.parts[1]===0&&a.parts[2]===0&&a.parts[3]===0)s=!0;else for(N=3;N>=0;N--){let b=0;const O=In(a);if(a=O.quotient,b=O.rem.low,!!b)for(o=8;o>=0;o--)n[N*9+o]=b%10,b=Math.floor(b/10)}if(s)r=1,n[i]=0;else for(r=36;!n[i];)r=r-1,i=i+1;const V=r-1+A;if(V>=34||V<=-7||A>0){if(r>34)return y.push("0"),A>0?y.push(`E+${A}`):A<0&&y.push(`E${A}`),y.join("");y.push(`${n[i++]}`),r=r-1,r&&y.push(".");for(let b=0;b<r;b++)y.push(`${n[i++]}`);y.push("E"),V>0?y.push(`+${V}`):y.push(`${V}`)}else if(A>=0)for(let b=0;b<r;b++)y.push(`${n[i++]}`);else{let b=r+A;if(b>0)for(let O=0;O<b;O++)y.push(`${n[i++]}`);else y.push("0");for(y.push(".");b++<0;)y.push("0");for(let O=0;O<r-Math.max(b-1,0);O++)y.push(`${n[i++]}`)}return y.join("")}toJSON(){return{$numberDecimal:this.toString()}}toExtendedJSON(){return{$numberDecimal:this.toString()}}static fromExtendedJSON(t){return F.fromString(t.$numberDecimal)}inspect(t,r,n){return n??=x,`new Decimal128(${n(this.toString(),r)})`}}class J extends P{get _bsontype(){return"Double"}constructor(t){super(),t instanceof Number&&(t=t.valueOf()),this.value=+t}static fromString(t){const r=Number(t);if(t==="NaN")return new J(NaN);if(t==="Infinity")return new J(1/0);if(t==="-Infinity")return new J(-1/0);if(!Number.isFinite(r))throw new c(`Input: ${t} is not representable as a Double`);if(t.trim()!==t)throw new c(`Input: '${t}' contains whitespace`);if(t==="")throw new c("Input is an empty string");if(/[^-0-9.+eE]/.test(t))throw new c(`Input: '${t}' is not in decimal or exponential notation`);return new J(r)}valueOf(){return this.value}toJSON(){return this.value}toString(t){return this.value.toString(t)}toExtendedJSON(t){return t&&(t.legacy||t.relaxed&&isFinite(this.value))?this.value:Object.is(Math.sign(this.value),-0)?{$numberDouble:"-0.0"}:{$numberDouble:Number.isInteger(this.value)?this.value.toFixed(1):this.value.toString()}}static fromExtendedJSON(t,r){const n=parseFloat(t.$numberDouble);return r&&r.relaxed?n:new J(n)}inspect(t,r,n){return n??=x,`new Double(${n(this.value,r)})`}}class v extends P{get _bsontype(){return"Int32"}constructor(t){super(),t instanceof Number&&(t=t.valueOf()),this.value=+t|0}static fromString(t){const r=Ye(t),n=Number(t);if(St<n)throw new c(`Input: '${t}' is larger than the maximum value for Int32`);if(Bt>n)throw new c(`Input: '${t}' is smaller than the minimum value for Int32`);if(Number.isSafeInteger(n)){if(n.toString()!==r)throw new c(`Input: '${t}' is not a valid Int32 string`)}else throw new c(`Input: '${t}' is not a safe integer`);return new v(n)}valueOf(){return this.value}toString(t){return this.value.toString(t)}toJSON(){return this.value}toExtendedJSON(t){return t&&(t.relaxed||t.legacy)?this.value:{$numberInt:this.value.toString()}}static fromExtendedJSON(t,r){return r&&r.relaxed?parseInt(t.$numberInt,10):new v(t.$numberInt)}inspect(t,r,n){return n??=x,`new Int32(${n(this.value,r)})`}}class ut extends P{get _bsontype(){return"MaxKey"}toExtendedJSON(){return{$maxKey:1}}static fromExtendedJSON(){return new ut}inspect(){return"new MaxKey()"}}class at extends P{get _bsontype(){return"MinKey"}toExtendedJSON(){return{$minKey:1}}static fromExtendedJSON(){return new at}inspect(){return"new MinKey()"}}let tt=null;const wt=new WeakMap;class R extends P{get _bsontype(){return"ObjectId"}constructor(t){super();let r;if(typeof t=="object"&&t&&"id"in t){if(typeof t.id!="string"&&!ArrayBuffer.isView(t.id))throw new c("Argument passed in must have an id that is of type string or Buffer");"toHexString"in t&&typeof t.toHexString=="function"?r=h.fromHex(t.toHexString()):r=t.id}else r=t;if(r==null||typeof r=="number")this.buffer=R.generate(typeof r=="number"?r:void 0);else if(ArrayBuffer.isView(r)&&r.byteLength===12)this.buffer=h.toLocalBufferType(r);else if(typeof r=="string")if(R.validateHexString(r))this.buffer=h.fromHex(r),R.cacheHexString&&wt.set(this,r);else throw new c("input must be a 24 character hex string, 12 byte Uint8Array, or an integer");else throw new c("Argument passed in does not match the accepted types")}get id(){return this.buffer}set id(t){this.buffer=t,R.cacheHexString&&wt.set(this,h.toHex(t))}static validateHexString(t){if(t?.length!==24)return!1;for(let r=0;r<24;r++){const n=t.charCodeAt(r);if(!(n>=48&&n<=57||n>=97&&n<=102||n>=65&&n<=70))return!1}return!0}toHexString(){if(R.cacheHexString){const r=wt.get(this);if(r)return r}const t=h.toHex(this.id);return R.cacheHexString&&wt.set(this,t),t}static getInc(){return R.index=(R.index+1)%16777215}static generate(t){typeof t!="number"&&(t=Math.floor(Date.now()/1e3));const r=R.getInc(),n=h.allocateUnsafe(12);return d.setInt32BE(n,0,t),tt===null&&(tt=h.randomBytes(5)),n[4]=tt[0],n[5]=tt[1],n[6]=tt[2],n[7]=tt[3],n[8]=tt[4],n[11]=r&255,n[10]=r>>8&255,n[9]=r>>16&255,n}toString(t){return t==="base64"?h.toBase64(this.id):t==="hex"?this.toHexString():this.toHexString()}toJSON(){return this.toHexString()}static is(t){return t!=null&&typeof t=="object"&&"_bsontype"in t&&t._bsontype==="ObjectId"}equals(t){if(t==null)return!1;if(R.is(t))return this.buffer[11]===t.buffer[11]&&h.equals(this.buffer,t.buffer);if(typeof t=="string")return t.toLowerCase()===this.toHexString();if(typeof t=="object"&&typeof t.toHexString=="function"){const r=t.toHexString(),n=this.toHexString();return typeof r=="string"&&r.toLowerCase()===n}return!1}getTimestamp(){const t=new Date,r=d.getUint32BE(this.buffer,0);return t.setTime(Math.floor(r)*1e3),t}static createPk(){return new R}serializeInto(t,r){return t[r]=this.buffer[0],t[r+1]=this.buffer[1],t[r+2]=this.buffer[2],t[r+3]=this.buffer[3],t[r+4]=this.buffer[4],t[r+5]=this.buffer[5],t[r+6]=this.buffer[6],t[r+7]=this.buffer[7],t[r+8]=this.buffer[8],t[r+9]=this.buffer[9],t[r+10]=this.buffer[10],t[r+11]=this.buffer[11],12}static createFromTime(t){const r=h.allocate(12);for(let n=11;n>=4;n--)r[n]=0;return d.setInt32BE(r,0,t),new R(r)}static createFromHexString(t){if(t?.length!==24)throw new c("hex string must be 24 characters");return new R(h.fromHex(t))}static createFromBase64(t){if(t?.length!==16)throw new c("base64 string must be 16 characters");return new R(h.fromBase64(t))}static isValid(t){if(t==null)return!1;if(typeof t=="string")return R.validateHexString(t);try{return new R(t),!0}catch{return!1}}toExtendedJSON(){return this.toHexString?{$oid:this.toHexString()}:{$oid:this.toString("hex")}}static fromExtendedJSON(t){return new R(t.$oid)}isCached(){return R.cacheHexString&&wt.has(this)}inspect(t,r,n){return n??=x,`new ObjectId(${n(this.toHexString(),r)})`}}R.index=Math.floor(Math.random()*16777215);function Ot(e,t,r){let n=5;if(Array.isArray(e))for(let i=0;i<e.length;i++)n+=Be(i.toString(),e[i],t,!0,r);else{typeof e?.toBSON=="function"&&(e=e.toBSON());for(const i of Object.keys(e))n+=Be(i,e[i],t,!1,r)}return n}function Be(e,t,r=!1,n=!1,i=!1){switch(typeof t?.toBSON=="function"&&(t=t.toBSON()),typeof t){case"string":return 1+h.utf8ByteLength(e)+1+4+h.utf8ByteLength(t)+1;case"number":return Math.floor(t)===t&&t>=Ie&&t<=Te&&t>=Bt&&t<=St?(e!=null?h.utf8ByteLength(e)+1:0)+5:(e!=null?h.utf8ByteLength(e)+1:0)+9;case"undefined":return n||!i?(e!=null?h.utf8ByteLength(e)+1:0)+1:0;case"boolean":return(e!=null?h.utf8ByteLength(e)+1:0)+2;case"object":if(t!=null&&typeof t._bsontype=="string"&&t[ht]!==et)throw new ct;if(t==null||t._bsontype==="MinKey"||t._bsontype==="MaxKey")return(e!=null?h.utf8ByteLength(e)+1:0)+1;if(t._bsontype==="ObjectId")return(e!=null?h.utf8ByteLength(e)+1:0)+13;if(t instanceof Date||ot(t))return(e!=null?h.utf8ByteLength(e)+1:0)+9;if(ArrayBuffer.isView(t)||t instanceof ArrayBuffer||vt(t))return(e!=null?h.utf8ByteLength(e)+1:0)+6+t.byteLength;if(t._bsontype==="Long"||t._bsontype==="Double"||t._bsontype==="Timestamp")return(e!=null?h.utf8ByteLength(e)+1:0)+9;if(t._bsontype==="Decimal128")return(e!=null?h.utf8ByteLength(e)+1:0)+17;if(t._bsontype==="Code")return t.scope!=null&&Object.keys(t.scope).length>0?(e!=null?h.utf8ByteLength(e)+1:0)+1+4+4+h.utf8ByteLength(t.code.toString())+1+Ot(t.scope,r,i):(e!=null?h.utf8ByteLength(e)+1:0)+1+4+h.utf8ByteLength(t.code.toString())+1;if(t._bsontype==="Binary"){const s=t;return s.sub_type===E.SUBTYPE_BYTE_ARRAY?(e!=null?h.utf8ByteLength(e)+1:0)+(s.position+1+4+1+4):(e!=null?h.utf8ByteLength(e)+1:0)+(s.position+1+4+1)}else{if(t._bsontype==="Symbol")return(e!=null?h.utf8ByteLength(e)+1:0)+h.utf8ByteLength(t.value)+4+1+1;if(t._bsontype==="DBRef"){const s=Object.assign({$ref:t.collection,$id:t.oid},t.fields);return t.db!=null&&(s.$db=t.db),(e!=null?h.utf8ByteLength(e)+1:0)+1+Ot(s,r,i)}else return t instanceof RegExp||st(t)?(e!=null?h.utf8ByteLength(e)+1:0)+1+h.utf8ByteLength(t.source)+1+(t.global?1:0)+(t.ignoreCase?1:0)+(t.multiline?1:0)+1:t._bsontype==="BSONRegExp"?(e!=null?h.utf8ByteLength(e)+1:0)+1+h.utf8ByteLength(t.pattern)+1+h.utf8ByteLength(t.options)+1:(e!=null?h.utf8ByteLength(e)+1:0)+Ot(t,r,i)+1}case"function":return r?(e!=null?h.utf8ByteLength(e)+1:0)+1+4+h.utf8ByteLength(t.toString())+1:0;case"bigint":return(e!=null?h.utf8ByteLength(e)+1:0)+9;case"symbol":return 0;default:throw new c(`Unrecognized JS type: ${typeof t}`)}}function _n(e){return e.split("").sort().join("")}class k extends P{get _bsontype(){return"BSONRegExp"}constructor(t,r){if(super(),this.pattern=t,this.options=_n(r??""),this.pattern.indexOf("\0")!==-1)throw new c(`BSON Regex patterns cannot contain null bytes, found: ${JSON.stringify(this.pattern)}`);if(this.options.indexOf("\0")!==-1)throw new c(`BSON Regex options cannot contain null bytes, found: ${JSON.stringify(this.options)}`);for(let n=0;n<this.options.length;n++)if(!(this.options[n]==="i"||this.options[n]==="m"||this.options[n]==="x"||this.options[n]==="l"||this.options[n]==="s"||this.options[n]==="u"))throw new c(`The regular expression option [${this.options[n]}] is not supported`)}static parseOptions(t){return t?t.split("").sort().join(""):""}toExtendedJSON(t){return t=t||{},t.legacy?{$regex:this.pattern,$options:this.options}:{$regularExpression:{pattern:this.pattern,options:this.options}}}static fromExtendedJSON(t){if("$regex"in t)if(typeof t.$regex!="string"){if(t.$regex._bsontype==="BSONRegExp")return t}else return new k(t.$regex,k.parseOptions(t.$options));if("$regularExpression"in t)return new k(t.$regularExpression.pattern,k.parseOptions(t.$regularExpression.options));throw new c(`Unexpected BSONRegExp EJSON object form: ${JSON.stringify(t)}`)}inspect(t,r,n){const i=ve(r)??(a=>a);n??=x;const s=i(n(this.pattern),"regexp"),u=i(n(this.options),"regexp");return`new BSONRegExp(${s}, ${u})`}}class gt extends P{get _bsontype(){return"BSONSymbol"}constructor(t){super(),this.value=t}valueOf(){return this.value}toString(){return this.value}toJSON(){return this.value}toExtendedJSON(){return{$symbol:this.value}}static fromExtendedJSON(t){return new gt(t.$symbol)}inspect(t,r,n){return n??=x,`new BSONSymbol(${n(this.value,r)})`}}const Un=f;class H extends Un{get _bsontype(){return"Timestamp"}get i(){return this.low>>>0}get t(){return this.high>>>0}constructor(t){if(t==null)super(0,0,!0);else if(typeof t=="bigint")super(t,!0);else if(f.isLong(t))super(t.low,t.high,!0);else if(typeof t=="object"&&"t"in t&&"i"in t){if(typeof t.t!="number"&&(typeof t.t!="object"||t.t._bsontype!=="Int32"))throw new c("Timestamp constructed from { t, i } must provide t as a number");if(typeof t.i!="number"&&(typeof t.i!="object"||t.i._bsontype!=="Int32"))throw new c("Timestamp constructed from { t, i } must provide i as a number");const r=Number(t.t),n=Number(t.i);if(r<0||Number.isNaN(r))throw new c("Timestamp constructed from { t, i } must provide a positive t");if(n<0||Number.isNaN(n))throw new c("Timestamp constructed from { t, i } must provide a positive i");if(r>4294967295)throw new c("Timestamp constructed from { t, i } must provide t equal or less than uint32 max");if(n>4294967295)throw new c("Timestamp constructed from { t, i } must provide i equal or less than uint32 max");super(n,r,!0)}else throw new c("A Timestamp can only be constructed with: bigint, Long, or { t: number; i: number }")}toJSON(){return{$timestamp:this.toString()}}static fromInt(t){return new H(f.fromInt(t,!0))}static fromNumber(t){return new H(f.fromNumber(t,!0))}static fromBits(t,r){return new H({i:t,t:r})}static fromString(t,r){return new H(f.fromString(t,!0,r))}toExtendedJSON(){return{$timestamp:{t:this.t,i:this.i}}}static fromExtendedJSON(t){const r=f.isLong(t.$timestamp.i)?t.$timestamp.i.getLowBitsUnsigned():t.$timestamp.i,n=f.isLong(t.$timestamp.t)?t.$timestamp.t.getLowBitsUnsigned():t.$timestamp.t;return new H({t:n,i:r})}inspect(t,r,n){n??=x;const i=n(this.t,r),s=n(this.i,r);return`new Timestamp({ t: ${i}, i: ${s} })`}}H.MAX_VALUE=f.MAX_UNSIGNED_VALUE;const Rn=f.fromNumber(Te),Ln=f.fromNumber(Ie);function He(e,t,r){t=t??{};const n=t&&t.index?t.index:0,i=d.getInt32LE(e,n);if(i<5)throw new c(`bson size must be >= 5, is ${i}`);if(t.allowObjectSmallerThanBufferSize&&e.length<i)throw new c(`buffer length ${e.length} must be >= bson size ${i}`);if(!t.allowObjectSmallerThanBufferSize&&e.length!==i)throw new c(`buffer length ${e.length} must === bson size ${i}`);if(i+n>e.byteLength)throw new c(`(bson size ${i} + options.index ${n} must be <= buffer length ${e.byteLength})`);if(e[n+i-1]!==0)throw new c("One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00");return dt(e,n,t,r)}const Dn=/^\$ref$|^\$id$|^\$db$/;function dt(e,t,r,n=!1){const i=r.fieldsAsRaw==null?null:r.fieldsAsRaw,s=r.raw==null?!1:r.raw,u=typeof r.bsonRegExp=="boolean"?r.bsonRegExp:!1,a=r.promoteBuffers??!1,o=r.promoteLongs??!0,N=r.promoteValues??!0,y=r.useBigInt64??!1;if(y&&!N)throw new c("Must either request bigint or Long for int64 deserialization");if(y&&!o)throw new c("Must either request bigint or Long for int64 deserialization");const l=r.validation==null?{utf8:!0}:r.validation;let g=!0,p,S;const I=l.utf8;if(typeof I=="boolean")p=I;else{g=!1;const O=Object.keys(I).map(function(T){return I[T]});if(O.length===0)throw new c("UTF-8 validation setting cannot be empty");if(typeof O[0]!="boolean")throw new c("Invalid UTF-8 validation option, must specify boolean values");if(p=O[0],!O.every(T=>T===p))throw new c("Invalid UTF-8 validation option - keys must be all true or all false")}if(!g){S=new Set;for(const O of Object.keys(I))S.add(O)}const U=t;if(e.length<5)throw new c("corrupt bson message < 5 bytes long");const z=d.getInt32LE(e,t);if(t+=4,z<5||z>e.length)throw new c("corrupt bson message");const A=n?[]:{};let V=0,b=n?!1:null;for(;;){const O=e[t++];if(O===0)break;let T=t;for(;e[T]!==0&&T<e.length;)T++;if(T>=e.byteLength)throw new c("Bad BSON Document: illegal CString");const W=n?V++:h.toUTF8(e,t,T,!1);let D=!0;g||S?.has(W)?D=p:D=!p,b!==!1&&W[0]==="$"&&(b=Dn.test(W));let B;if(t=T+1,O===$e){const m=d.getInt32LE(e,t);if(t+=4,m<=0||m>e.length-t||e[t+m-1]!==0)throw new c("bad string length in bson");B=h.toUTF8(e,t,t+m-1,D),t=t+m}else if(O===_e){const m=h.allocateUnsafe(12);for(let w=0;w<12;w++)m[w]=e[t+w];B=new R(m),t=t+12}else if(O===pt&&N===!1)B=new v(d.getInt32LE(e,t)),t+=4;else if(O===pt)B=d.getInt32LE(e,t),t+=4;else if(O===ee)B=d.getFloat64LE(e,t),t+=8,N===!1&&(B=new J(B));else if(O===Re){const m=d.getInt32LE(e,t),w=d.getInt32LE(e,t+4);t+=8,B=new Date(new f(m,w).toNumber())}else if(O===Ue){if(e[t]!==0&&e[t]!==1)throw new c("illegal boolean type value");B=e[t++]===1}else if(O===ne){const m=t,w=d.getInt32LE(e,t);if(w<=0||w>e.length-t)throw new c("bad embedded document length in bson");if(s)B=e.subarray(t,t+w);else{let $=r;g||($={...r,validation:{utf8:D}}),B=dt(e,m,$,!1)}t=t+w}else if(O===Ae){const m=t,w=d.getInt32LE(e,t);let $=r;const j=t+w;if(i&&i[W]&&($={...r,raw:!0}),g||($={...$,validation:{utf8:D}}),B=dt(e,m,$,!0),t=t+w,e[t-1]!==0)throw new c("invalid array terminator byte");if(t!==j)throw new c("corrupted array bson")}else if(O===tn)B=void 0;else if(O===ie)B=null;else if(O===oe)if(y)B=d.getBigInt64LE(e,t),t+=8;else{const m=d.getInt32LE(e,t),w=d.getInt32LE(e,t+4);t+=8;const $=new f(m,w);o&&N===!0?B=$.lessThanOrEqual(Rn)&&$.greaterThanOrEqual(Ln)?$.toNumber():$:B=$}else if(O===Me){const m=h.allocateUnsafe(16);for(let w=0;w<16;w++)m[w]=e[t+w];t=t+16,B=new F(m)}else if(O===re){let m=d.getInt32LE(e,t);t+=4;const w=m,$=e[t++];if(m<0)throw new c("Negative binary type element size found");if(m>e.byteLength)throw new c("Binary type size larger than document size");if($===E.SUBTYPE_BYTE_ARRAY){if(m=d.getInt32LE(e,t),t+=4,m<0)throw new c("Negative binary type element size found for subtype 0x02");if(m>w-4)throw new c("Binary type with subtype 0x02 contains too long binary size");if(m<w-4)throw new c("Binary type with subtype 0x02 contains too short binary size")}a&&N?B=h.toLocalBufferType(e.subarray(t,t+m)):(B=new E(e.subarray(t,t+m),$),$===fe&&M.isValid(B)&&(B=B.toUUID())),t=t+m}else if(O===Tt&&u===!1){for(T=t;e[T]!==0&&T<e.length;)T++;if(T>=e.length)throw new c("Bad BSON Document: illegal CString");const m=h.toUTF8(e,t,T,!1);for(t=T+1,T=t;e[T]!==0&&T<e.length;)T++;if(T>=e.length)throw new c("Bad BSON Document: illegal CString");const w=h.toUTF8(e,t,T,!1);t=T+1;const $=new Array(w.length);for(T=0;T<w.length;T++)switch(w[T]){case"m":$[T]="m";break;case"s":$[T]="g";break;case"i":$[T]="i";break}B=new RegExp(m,$.join(""))}else if(O===Tt&&u===!0){for(T=t;e[T]!==0&&T<e.length;)T++;if(T>=e.length)throw new c("Bad BSON Document: illegal CString");const m=h.toUTF8(e,t,T,!1);for(t=T+1,T=t;e[T]!==0&&T<e.length;)T++;if(T>=e.length)throw new c("Bad BSON Document: illegal CString");const w=h.toUTF8(e,t,T,!1);t=T+1,B=new k(m,w)}else if(O===Le){const m=d.getInt32LE(e,t);if(t+=4,m<=0||m>e.length-t||e[t+m-1]!==0)throw new c("bad string length in bson");const w=h.toUTF8(e,t,t+m-1,D);B=N?w:new gt(w),t=t+m}else if(O===ze)B=new H({i:d.getUint32LE(e,t),t:d.getUint32LE(e,t+4)}),t+=8;else if(O===Fe)B=new at;else if(O===xe)B=new ut;else if(O===se){const m=d.getInt32LE(e,t);if(t+=4,m<=0||m>e.length-t||e[t+m-1]!==0)throw new c("bad string length in bson");const w=h.toUTF8(e,t,t+m-1,D);B=new Q(w),t=t+m}else if(O===De){const m=d.getInt32LE(e,t);if(t+=4,m<13)throw new c("code_w_scope total size shorter minimum expected length");const w=d.getInt32LE(e,t);if(t+=4,w<=0||w>e.length-t||e[t+w-1]!==0)throw new c("bad string length in bson");const $=h.toUTF8(e,t,t+w-1,D);t=t+w;const j=t,L=d.getInt32LE(e,t),Ke=dt(e,j,r,!1);if(t=t+L,m<8+L+w)throw new c("code_w_scope total size is too short, truncating scope");if(m>8+L+w)throw new c("code_w_scope total size is too long, clips outer document");B=new Q($,Ke)}else if(O===en){const m=d.getInt32LE(e,t);if(t+=4,m<=0||m>e.length-t||e[t+m-1]!==0)throw new c("bad string length in bson");const w=h.toUTF8(e,t,t+m-1,D);t=t+m;const $=h.allocateUnsafe(12);for(let L=0;L<12;L++)$[L]=e[t+L];const j=new R($);t=t+12,B=new G(w,j)}else throw new c(`Detected unknown BSON type ${O.toString(16)} for fieldname "${W}"`);W==="__proto__"?Object.defineProperty(A,W,{value:B,writable:!0,enumerable:!0,configurable:!0}):A[W]=B}if(z!==t-U)throw n?new c("corrupt array bson"):new c("corrupt object bson");if(!b)return A;if(Ve(A)){const O=Object.assign({},A);return delete O.$ref,delete O.$id,delete O.$db,new G(A.$ref,A.$id,A.$db,O)}return A}const It=/\x00/,Ne=new Set(["$db","$ref","$id","$clusterTime"]);function Ut(e,t,r,n){e[n++]=$e;const i=h.encodeUTF8Into(e,t,n);n=n+i+1,e[n-1]=0;const s=h.encodeUTF8Into(e,r,n+4);return d.setInt32LE(e,n,s+1),n=n+4+s,e[n++]=0,n}function Rt(e,t,r,n){const s=!Object.is(r,-0)&&Number.isSafeInteger(r)&&r<=St&&r>=Bt?pt:ee;e[n++]=s;const u=h.encodeUTF8Into(e,t,n);return n=n+u,e[n++]=0,s===pt?n+=d.setInt32LE(e,n,r):n+=d.setFloat64LE(e,n,r),n}function Lt(e,t,r,n){e[n++]=oe;const i=h.encodeUTF8Into(e,t,n);return n+=i,e[n++]=0,n+=d.setBigInt64LE(e,n,r),n}function rt(e,t,r,n){e[n++]=ie;const i=h.encodeUTF8Into(e,t,n);return n=n+i,e[n++]=0,n}function Dt(e,t,r,n){e[n++]=Ue;const i=h.encodeUTF8Into(e,t,n);return n=n+i,e[n++]=0,e[n++]=r?1:0,n}function zt(e,t,r,n){e[n++]=Re;const i=h.encodeUTF8Into(e,t,n);n=n+i,e[n++]=0;const s=f.fromNumber(r.getTime()),u=s.getLowBits(),a=s.getHighBits();return n+=d.setInt32LE(e,n,u),n+=d.setInt32LE(e,n,a),n}function Mt(e,t,r,n){e[n++]=Tt;const i=h.encodeUTF8Into(e,t,n);if(n=n+i,e[n++]=0,r.source&&r.source.match(It)!=null)throw new c("value "+r.source+" must not contain null bytes");return n=n+h.encodeUTF8Into(e,r.source,n),e[n++]=0,r.ignoreCase&&(e[n++]=105),r.global&&(e[n++]=115),r.multiline&&(e[n++]=109),e[n++]=0,n}function Ft(e,t,r,n){e[n++]=Tt;const i=h.encodeUTF8Into(e,t,n);if(n=n+i,e[n++]=0,r.pattern.match(It)!=null)throw new c("pattern "+r.pattern+" must not contain null bytes");n=n+h.encodeUTF8Into(e,r.pattern,n),e[n++]=0;const s=r.options.split("").sort().join("");return n=n+h.encodeUTF8Into(e,s,n),e[n++]=0,n}function xt(e,t,r,n){r===null?e[n++]=ie:r._bsontype==="MinKey"?e[n++]=Fe:e[n++]=xe;const i=h.encodeUTF8Into(e,t,n);return n=n+i,e[n++]=0,n}function Pt(e,t,r,n){e[n++]=_e;const i=h.encodeUTF8Into(e,t,n);return n=n+i,e[n++]=0,n+=r.serializeInto(e,n),n}function jt(e,t,r,n){e[n++]=re;const i=h.encodeUTF8Into(e,t,n);n=n+i,e[n++]=0;const s=r.length;if(n+=d.setInt32LE(e,n,s),e[n++]=nn,s<=16)for(let u=0;u<s;u++)e[n+u]=r[u];else e.set(r,n);return n=n+s,n}function Ct(e,t,r,n,i,s,u,a,o){if(o.has(r))throw new c("Cannot convert circular structure to BSON");o.add(r),e[n++]=Array.isArray(r)?Ae:ne;const N=h.encodeUTF8Into(e,t,n);n=n+N,e[n++]=0;const y=Nt(e,r,i,n,s+1,u,a,o);return o.delete(r),y}function Vt(e,t,r,n){e[n++]=Me;const i=h.encodeUTF8Into(e,t,n);n=n+i,e[n++]=0;for(let s=0;s<16;s++)e[n+s]=r.bytes[s];return n+16}function Yt(e,t,r,n){e[n++]=r._bsontype==="Long"?oe:ze;const i=h.encodeUTF8Into(e,t,n);n=n+i,e[n++]=0;const s=r.getLowBits(),u=r.getHighBits();return n+=d.setInt32LE(e,n,s),n+=d.setInt32LE(e,n,u),n}function Jt(e,t,r,n){r=r.valueOf(),e[n++]=pt;const i=h.encodeUTF8Into(e,t,n);return n=n+i,e[n++]=0,n+=d.setInt32LE(e,n,r),n}function Ht(e,t,r,n){e[n++]=ee;const i=h.encodeUTF8Into(e,t,n);return n=n+i,e[n++]=0,n+=d.setFloat64LE(e,n,r.value),n}function kt(e,t,r,n){e[n++]=se;const i=h.encodeUTF8Into(e,t,n);n=n+i,e[n++]=0;const s=r.toString(),u=h.encodeUTF8Into(e,s,n+4)+1;return d.setInt32LE(e,n,u),n=n+4+u-1,e[n++]=0,n}function Wt(e,t,r,n,i=!1,s=0,u=!1,a=!0,o){if(r.scope&&typeof r.scope=="object"){e[n++]=De;const N=h.encodeUTF8Into(e,t,n);n=n+N,e[n++]=0;let y=n;const l=r.code;n=n+4;const g=h.encodeUTF8Into(e,l,n+4)+1;d.setInt32LE(e,n,g),e[n+4+g-1]=0,n=n+g+4;const p=Nt(e,r.scope,i,n,s+1,u,a,o);n=p-1;const S=p-y;y+=d.setInt32LE(e,y,S),e[n++]=0}else{e[n++]=se;const N=h.encodeUTF8Into(e,t,n);n=n+N,e[n++]=0;const y=r.code.toString(),l=h.encodeUTF8Into(e,y,n+4)+1;d.setInt32LE(e,n,l),n=n+4+l-1,e[n++]=0}return n}function Zt(e,t,r,n){e[n++]=re;const i=h.encodeUTF8Into(e,t,n);n=n+i,e[n++]=0;const s=r.buffer;let u=r.position;if(r.sub_type===E.SUBTYPE_BYTE_ARRAY&&(u=u+4),n+=d.setInt32LE(e,n,u),e[n++]=r.sub_type,r.sub_type===E.SUBTYPE_BYTE_ARRAY&&(u=u-4,n+=d.setInt32LE(e,n,u)),r.sub_type===E.SUBTYPE_VECTOR&&Ce(r),u<=16)for(let a=0;a<u;a++)e[n+a]=s[a];else e.set(s,n);return n=n+r.position,n}function qt(e,t,r,n){e[n++]=Le;const i=h.encodeUTF8Into(e,t,n);n=n+i,e[n++]=0;const s=h.encodeUTF8Into(e,r.value,n+4)+1;return d.setInt32LE(e,n,s),n=n+4+s-1,e[n++]=0,n}function Kt(e,t,r,n,i,s,u){e[n++]=ne;const a=h.encodeUTF8Into(e,t,n);n=n+a,e[n++]=0;let o=n,N={$ref:r.collection||r.namespace,$id:r.oid};r.db!=null&&(N.$db=r.db),N=Object.assign(N,r.fields);const y=Nt(e,N,!1,n,i+1,s,!0,u),l=y-o;return o+=d.setInt32LE(e,n,l),y}function Nt(e,t,r,n,i,s,u,a){if(a==null){if(t==null)return e[0]=5,e[1]=0,e[2]=0,e[3]=0,e[4]=0,5;if(Array.isArray(t))throw new c("serialize does not support an array as the root input");if(typeof t!="object")throw new c("serialize does not support non-object as the root input");if("_bsontype"in t&&typeof t._bsontype=="string")throw new c("BSON types cannot be serialized as a document");if(ot(t)||st(t)||it(t)||vt(t))throw new c("date, regexp, typedarray, and arraybuffer cannot be BSON documents");a=new Set}a.add(t);let o=n+4;if(Array.isArray(t))for(let y=0;y<t.length;y++){const l=`${y}`;let g=t[y];typeof g?.toBSON=="function"&&(g=g.toBSON());const p=typeof g;if(g===void 0)o=rt(e,l,g,o);else if(g===null)o=rt(e,l,g,o);else if(p==="string")o=Ut(e,l,g,o);else if(p==="number")o=Rt(e,l,g,o);else if(p==="bigint")o=Lt(e,l,g,o);else if(p==="boolean")o=Dt(e,l,g,o);else if(p==="object"&&g._bsontype==null)g instanceof Date||ot(g)?o=zt(e,l,g,o):g instanceof Uint8Array||it(g)?o=jt(e,l,g,o):g instanceof RegExp||st(g)?o=Mt(e,l,g,o):o=Ct(e,l,g,o,r,i,s,u,a);else if(p==="object"){if(g[ht]!==et)throw new ct;if(g._bsontype==="ObjectId")o=Pt(e,l,g,o);else if(g._bsontype==="Decimal128")o=Vt(e,l,g,o);else if(g._bsontype==="Long"||g._bsontype==="Timestamp")o=Yt(e,l,g,o);else if(g._bsontype==="Double")o=Ht(e,l,g,o);else if(g._bsontype==="Code")o=Wt(e,l,g,o,r,i,s,u,a);else if(g._bsontype==="Binary")o=Zt(e,l,g,o);else if(g._bsontype==="BSONSymbol")o=qt(e,l,g,o);else if(g._bsontype==="DBRef")o=Kt(e,l,g,o,i,s,a);else if(g._bsontype==="BSONRegExp")o=Ft(e,l,g,o);else if(g._bsontype==="Int32")o=Jt(e,l,g,o);else if(g._bsontype==="MinKey"||g._bsontype==="MaxKey")o=xt(e,l,g,o);else if(typeof g._bsontype<"u")throw new c(`Unrecognized or invalid _bsontype: ${String(g._bsontype)}`)}else p==="function"&&s&&(o=kt(e,l,g,o))}else if(t instanceof Map||te(t)){const y=t.entries();let l=!1;for(;!l;){const g=y.next();if(l=!!g.done,l)continue;const p=g.value?g.value[0]:void 0;let S=g.value?g.value[1]:void 0;typeof S?.toBSON=="function"&&(S=S.toBSON());const I=typeof S;if(typeof p=="string"&&!Ne.has(p)){if(p.match(It)!=null)throw new c("key "+p+" must not contain null bytes");if(r){if(p[0]==="$")throw new c("key "+p+" must not start with '$'");if(p.includes("."))throw new c("key "+p+" must not contain '.'")}}if(S===void 0)u===!1&&(o=rt(e,p,S,o));else if(S===null)o=rt(e,p,S,o);else if(I==="string")o=Ut(e,p,S,o);else if(I==="number")o=Rt(e,p,S,o);else if(I==="bigint")o=Lt(e,p,S,o);else if(I==="boolean")o=Dt(e,p,S,o);else if(I==="object"&&S._bsontype==null)S instanceof Date||ot(S)?o=zt(e,p,S,o):S instanceof Uint8Array||it(S)?o=jt(e,p,S,o):S instanceof RegExp||st(S)?o=Mt(e,p,S,o):o=Ct(e,p,S,o,r,i,s,u,a);else if(I==="object"){if(S[ht]!==et)throw new ct;if(S._bsontype==="ObjectId")o=Pt(e,p,S,o);else if(S._bsontype==="Decimal128")o=Vt(e,p,S,o);else if(S._bsontype==="Long"||S._bsontype==="Timestamp")o=Yt(e,p,S,o);else if(S._bsontype==="Double")o=Ht(e,p,S,o);else if(S._bsontype==="Code")o=Wt(e,p,S,o,r,i,s,u,a);else if(S._bsontype==="Binary")o=Zt(e,p,S,o);else if(S._bsontype==="BSONSymbol")o=qt(e,p,S,o);else if(S._bsontype==="DBRef")o=Kt(e,p,S,o,i,s,a);else if(S._bsontype==="BSONRegExp")o=Ft(e,p,S,o);else if(S._bsontype==="Int32")o=Jt(e,p,S,o);else if(S._bsontype==="MinKey"||S._bsontype==="MaxKey")o=xt(e,p,S,o);else if(typeof S._bsontype<"u")throw new c(`Unrecognized or invalid _bsontype: ${String(S._bsontype)}`)}else I==="function"&&s&&(o=kt(e,p,S,o))}}else{if(typeof t?.toBSON=="function"&&(t=t.toBSON(),t!=null&&typeof t!="object"))throw new c("toBSON function did not return an object");for(const y of Object.keys(t)){let l=t[y];typeof l?.toBSON=="function"&&(l=l.toBSON());const g=typeof l;if(typeof y=="string"&&!Ne.has(y)){if(y.match(It)!=null)throw new c("key "+y+" must not contain null bytes");if(r){if(y[0]==="$")throw new c("key "+y+" must not start with '$'");if(y.includes("."))throw new c("key "+y+" must not contain '.'")}}if(l===void 0)u===!1&&(o=rt(e,y,l,o));else if(l===null)o=rt(e,y,l,o);else if(g==="string")o=Ut(e,y,l,o);else if(g==="number")o=Rt(e,y,l,o);else if(g==="bigint")o=Lt(e,y,l,o);else if(g==="boolean")o=Dt(e,y,l,o);else if(g==="object"&&l._bsontype==null)l instanceof Date||ot(l)?o=zt(e,y,l,o):l instanceof Uint8Array||it(l)?o=jt(e,y,l,o):l instanceof RegExp||st(l)?o=Mt(e,y,l,o):o=Ct(e,y,l,o,r,i,s,u,a);else if(g==="object"){if(l[ht]!==et)throw new ct;if(l._bsontype==="ObjectId")o=Pt(e,y,l,o);else if(l._bsontype==="Decimal128")o=Vt(e,y,l,o);else if(l._bsontype==="Long"||l._bsontype==="Timestamp")o=Yt(e,y,l,o);else if(l._bsontype==="Double")o=Ht(e,y,l,o);else if(l._bsontype==="Code")o=Wt(e,y,l,o,r,i,s,u,a);else if(l._bsontype==="Binary")o=Zt(e,y,l,o);else if(l._bsontype==="BSONSymbol")o=qt(e,y,l,o);else if(l._bsontype==="DBRef")o=Kt(e,y,l,o,i,s,a);else if(l._bsontype==="BSONRegExp")o=Ft(e,y,l,o);else if(l._bsontype==="Int32")o=Jt(e,y,l,o);else if(l._bsontype==="MinKey"||l._bsontype==="MaxKey")o=xt(e,y,l,o);else if(typeof l._bsontype<"u")throw new c(`Unrecognized or invalid _bsontype: ${String(l._bsontype)}`)}else g==="function"&&s&&(o=kt(e,y,l,o))}}a.delete(t),e[o++]=0;const N=o-n;return n+=d.setInt32LE(e,n,N),o}function zn(e){return e!=null&&typeof e=="object"&&"_bsontype"in e&&typeof e._bsontype=="string"}const Mn={$oid:R,$binary:E,$uuid:E,$symbol:gt,$numberInt:v,$numberDecimal:F,$numberDouble:J,$numberLong:f,$minKey:at,$maxKey:ut,$regex:k,$regularExpression:k,$timestamp:H};function ke(e,t={}){if(typeof e=="number"){const n=e<=St&&e>=Bt,i=e<=Oe&&e>=de;if(t.relaxed||t.legacy)return e;if(Number.isInteger(e)&&!Object.is(e,-0)){if(n)return new v(e);if(i)return t.useBigInt64?BigInt(e):f.fromNumber(e)}return new J(e)}if(e==null||typeof e!="object")return e;if(e.$undefined)return null;const r=Object.keys(e).filter(n=>n.startsWith("$")&&e[n]!=null);for(let n=0;n<r.length;n++){const i=Mn[r[n]];if(i)return i.fromExtendedJSON(e,t)}if(e.$date!=null){const n=e.$date,i=new Date;if(t.legacy)if(typeof n=="number")i.setTime(n);else if(typeof n=="string")i.setTime(Date.parse(n));else if(typeof n=="bigint")i.setTime(Number(n));else throw new Qt(`Unrecognized type for EJSON date: ${typeof n}`);else if(typeof n=="string")i.setTime(Date.parse(n));else if(f.isLong(n))i.setTime(n.toNumber());else if(typeof n=="number"&&t.relaxed)i.setTime(n);else if(typeof n=="bigint")i.setTime(Number(n));else throw new Qt(`Unrecognized type for EJSON date: ${typeof n}`);return i}if(e.$code!=null){const n=Object.assign({},e);return e.$scope&&(n.$scope=ke(e.$scope)),Q.fromExtendedJSON(e)}if(Ve(e)||e.$dbPointer){const n=e.$ref?e:e.$dbPointer;if(n instanceof G)return n;const i=Object.keys(n).filter(u=>u.startsWith("$"));let s=!0;if(i.forEach(u=>{["$ref","$id","$db"].indexOf(u)===-1&&(s=!1)}),s)return G.fromExtendedJSON(n)}return e}function Fn(e,t){return e.map((r,n)=>{t.seenObjects.push({propertyName:`index ${n}`,obj:null});try{return K(r,t)}finally{t.seenObjects.pop()}})}function Ee(e){const t=e.toISOString();return e.getUTCMilliseconds()!==0?t:t.slice(0,-5)+"Z"}function K(e,t){if(e instanceof Map||te(e)){const r=Object.create(null);for(const[n,i]of e){if(typeof n!="string")throw new c("Can only serialize maps with string keys");r[n]=i}return K(r,t)}if((typeof e=="object"||typeof e=="function")&&e!==null){const r=t.seenObjects.findIndex(n=>n.obj===e);if(r!==-1){const n=t.seenObjects.map(y=>y.propertyName),i=n.slice(0,r).map(y=>`${y} -> `).join(""),s=n[r],u=" -> "+n.slice(r+1,n.length-1).map(y=>`${y} -> `).join(""),a=n[n.length-1],o=" ".repeat(i.length+s.length/2),N="-".repeat(u.length+(s.length+a.length)/2-1);throw new c(`Converting circular structure to EJSON:
    ${i}${s}${u}${a}
    ${o}\\${N}/`)}t.seenObjects[t.seenObjects.length-1].obj=e}if(Array.isArray(e))return Fn(e,t);if(e===void 0)return null;if(e instanceof Date||ot(e)){const r=e.getTime(),n=r>-1&&r<2534023188e5;return t.legacy?t.relaxed&&n?{$date:e.getTime()}:{$date:Ee(e)}:t.relaxed&&n?{$date:Ee(e)}:{$date:{$numberLong:e.getTime().toString()}}}if(typeof e=="number"&&(!t.relaxed||!isFinite(e))){if(Number.isInteger(e)&&!Object.is(e,-0)){if(e>=Bt&&e<=St)return{$numberInt:e.toString()};if(e>=de&&e<=Oe)return{$numberLong:e.toString()}}return{$numberDouble:Object.is(e,-0)?"-0.0":e.toString()}}if(typeof e=="bigint")return t.relaxed?Number(BigInt.asIntN(64,e)):{$numberLong:BigInt.asIntN(64,e).toString()};if(e instanceof RegExp||st(e)){let r=e.flags;if(r===void 0){const i=e.toString().match(/[gimuy]*$/);i&&(r=i[0])}return new k(e.source,r).toExtendedJSON(t)}return e!=null&&typeof e=="object"?Pn(e,t):e}const xn={Binary:e=>new E(e.value(),e.sub_type),Code:e=>new Q(e.code,e.scope),DBRef:e=>new G(e.collection||e.namespace,e.oid,e.db,e.fields),Decimal128:e=>new F(e.bytes),Double:e=>new J(e.value),Int32:e=>new v(e.value),Long:e=>f.fromBits(e.low!=null?e.low:e.low_,e.low!=null?e.high:e.high_,e.low!=null?e.unsigned:e.unsigned_),MaxKey:()=>new ut,MinKey:()=>new at,ObjectId:e=>new R(e),BSONRegExp:e=>new k(e.pattern,e.options),BSONSymbol:e=>new gt(e.value),Timestamp:e=>H.fromBits(e.low,e.high)};function Pn(e,t){if(e==null||typeof e!="object")throw new c("not an object instance");const r=e._bsontype;if(typeof r>"u"){const n={};for(const i of Object.keys(e)){t.seenObjects.push({propertyName:i,obj:null});try{const s=K(e[i],t);i==="__proto__"?Object.defineProperty(n,i,{value:s,writable:!0,enumerable:!0,configurable:!0}):n[i]=s}finally{t.seenObjects.pop()}}return n}else{if(e!=null&&typeof e=="object"&&typeof e._bsontype=="string"&&e[ht]!==et)throw new ct;if(zn(e)){let n=e;if(typeof n.toExtendedJSON!="function"){const i=xn[e._bsontype];if(!i)throw new c("Unrecognized or invalid _bsontype: "+e._bsontype);n=i(n)}return r==="Code"&&n.scope?n=new Q(n.code,K(n.scope,t)):r==="DBRef"&&n.oid&&(n=new G(K(n.collection,t),K(n.oid,t),K(n.db,t),K(n.fields,t))),n.toExtendedJSON(t)}else throw new c("_bsontype must be a string, but was: "+typeof r)}}function We(e,t){const r={useBigInt64:t?.useBigInt64??!1,relaxed:t?.relaxed??!0,legacy:t?.legacy??!1};return JSON.parse(e,(n,i)=>{if(n.indexOf("\0")!==-1)throw new c(`BSON Document field names cannot contain null bytes, found: ${JSON.stringify(n)}`);return ke(i,r)})}function Ze(e,t,r,n){r!=null&&typeof r=="object"&&(n=r,r=0),t!=null&&typeof t=="object"&&!Array.isArray(t)&&(n=t,t=void 0,r=0);const i=Object.assign({relaxed:!0,legacy:!1},n,{seenObjects:[{propertyName:"(root)",obj:null}]}),s=K(e,i);return JSON.stringify(s,t,r)}function jn(e,t){return t=t||{},JSON.parse(Ze(e,t))}function Cn(e,t){return t=t||{},We(JSON.stringify(e),t)}const yt=Object.create(null);yt.parse=We;yt.stringify=Ze;yt.serialize=jn;yt.deserialize=Cn;Object.freeze(yt);function Gt(e,t){try{return d.getNonnegativeInt32LE(e,t)}catch(r){throw new q("BSON size cannot be negative",t,{cause:r})}}function Xt(e,t){let r=t;for(;e[r]!==0;r++);if(r===e.length-1)throw new q("Null terminator not found",t);return r}function Vn(e,t=0){if(t??=0,e.length<5)throw new q(`Input must be at least 5 bytes, got ${e.length} bytes`,t);const r=Gt(e,t);if(r>e.length-t)throw new q(`Parsed documentSize (${r} bytes) does not match input length (${e.length} bytes)`,t);if(e[t+r-1]!==0)throw new q("BSON documents must end in 0x00",t+r);const n=[];let i=t+4;for(;i<=r+t;){const s=e[i];if(i+=1,s===0){if(i-t!==r)throw new q("Invalid 0x00 type byte",i);break}const u=i,a=Xt(e,i)-u;i+=a+1;let o;if(s===1||s===18||s===9||s===17)o=8;else if(s===16)o=4;else if(s===7)o=12;else if(s===19)o=16;else if(s===8)o=1;else if(s===10||s===6||s===127||s===255)o=0;else if(s===11)o=Xt(e,Xt(e,i)+1)+1-i;else if(s===3||s===4||s===15)o=Gt(e,i);else if(s===2||s===5||s===12||s===13||s===14)o=Gt(e,i)+4,s===5&&(o+=1),s===12&&(o+=12);else throw new q(`Invalid 0x${s.toString(16).padStart(2,"0")} type byte`,i);if(o>r)throw new q("value reports length larger than document",i);n.push([s,u,a,i,o]),i+=o}return n}const Et=Object.create(null);Et.parseToElements=Vn;Et.ByteUtils=h;Et.NumberUtils=d;Object.freeze(Et);const qe=1024*1024*17;let X=h.allocate(qe);function Yn(e){X.length<e&&(X=h.allocate(e))}function Jn(e,t={}){const r=typeof t.checkKeys=="boolean"?t.checkKeys:!1,n=typeof t.serializeFunctions=="boolean"?t.serializeFunctions:!1,i=typeof t.ignoreUndefined=="boolean"?t.ignoreUndefined:!0,s=typeof t.minInternalBufferSize=="number"?t.minInternalBufferSize:qe;X.length<s&&(X=h.allocate(s));const u=Nt(X,e,r,0,0,n,i,null),a=h.allocateUnsafe(u);return a.set(X.subarray(0,u),0),a}function Hn(e,t,r={}){const n=typeof r.checkKeys=="boolean"?r.checkKeys:!1,i=typeof r.serializeFunctions=="boolean"?r.serializeFunctions:!1,s=typeof r.ignoreUndefined=="boolean"?r.ignoreUndefined:!0,u=typeof r.index=="number"?r.index:0,a=Nt(X,e,n,0,0,i,s,null);return t.set(X.subarray(0,a),u),u+a-1}function kn(e,t={}){return He(h.toLocalBufferType(e),t)}function Wn(e,t={}){t=t||{};const r=typeof t.serializeFunctions=="boolean"?t.serializeFunctions:!1,n=typeof t.ignoreUndefined=="boolean"?t.ignoreUndefined:!0;return Ot(e,r,n)}function Zn(e,t,r,n,i,s){const u=Object.assign({allowObjectSmallerThanBufferSize:!0,index:0},s),a=h.toLocalBufferType(e);let o=t;for(let N=0;N<r;N++){const y=d.getInt32LE(a,o);u.index=o,n[i+N]=He(a,u),o=o+y}return o}var Kn=Object.freeze({__proto__:null,BSONError:c,BSONOffsetError:q,BSONRegExp:k,BSONRuntimeError:Qt,BSONSymbol:gt,BSONType:rn,BSONValue:P,BSONVersionError:ct,Binary:E,Code:Q,DBRef:G,Decimal128:F,Double:J,EJSON:yt,Int32:v,Long:f,MaxKey:ut,MinKey:at,ObjectId:R,Timestamp:H,UUID:M,calculateObjectSize:Wn,deserialize:kn,deserializeStream:Zn,onDemand:Et,serialize:Jn,serializeWithBufferAndIndex:Hn,setInternalBufferSize:Yn});export{Kn as BSON,c as BSONError,q as BSONOffsetError,k as BSONRegExp,Qt as BSONRuntimeError,gt as BSONSymbol,rn as BSONType,P as BSONValue,ct as BSONVersionError,E as Binary,Q as Code,G as DBRef,F as Decimal128,J as Double,yt as EJSON,v as Int32,f as Long,ut as MaxKey,at as MinKey,R as ObjectId,H as Timestamp,M as UUID,Wn as calculateObjectSize,kn as deserialize,Zn as deserializeStream,Et as onDemand,Jn as serialize,Hn as serializeWithBufferAndIndex,Yn as setInternalBufferSize};
//# sourceMappingURL=bson-BUw40l2C.js.map
