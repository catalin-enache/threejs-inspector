{"version":3,"file":"index_injected_native-CclfWItT.js","sources":["../../demo/index_injected_native.html?html-proxy&index=0.js"],"sourcesContent":["\n\n  import * as THREE from 'three';\n  import { injectInspector } from 'src/lib/inspector.js';\n  import api from 'src/lib/api.js';\n  import { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n  import { FBXLoader } from 'three/addons/loaders/FBXLoader.js';\n\n  import { projects } from './projects';\n\n  api.setProjects(projects);\n  api.registerDefaultPlayTriggers();\n  api.injectStats();\n\n  const customCameraControls = false;\n\n  const manager = new THREE.LoadingManager();\n\n  let camera, perspectiveCamera, orthographicCamera, scene, renderer, object, loader, controls;\n  let mixer;\n\n  const clock = new THREE.Clock();\n\n  const params = {\n    asset: 'Samba Dancing'\n  };\n\n  const assets = [\n    'Samba Dancing',\n    'morph_test'\n  ];\n\n\n  init();\n\n  function init() {\n\n    const container = document.createElement( 'div' );\n    document.body.appendChild( container );\n\n    perspectiveCamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 10000 );\n    perspectiveCamera.position.set( 100, 200, 300 );\n\n    orthographicCamera = new THREE.OrthographicCamera(window.innerWidth / -2,  window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / -2, 0.1, 10000);\n    orthographicCamera.position.set( 100, 200, 300 );\n\n    camera = perspectiveCamera;\n\n    window.addEventListener('keydown', (event) => {\n      if (event.code === 'KeyC') {\n        if (camera === perspectiveCamera) {\n          camera = orthographicCamera;\n        } else {\n          camera = perspectiveCamera;\n        }\n        controls.object = camera;\n        if (typeof updateInspector !== \"undefined\") {\n          updateInspector({ camera });\n        }\n      }\n    });\n\n    scene = new THREE.Scene();\n    scene.background = new THREE.Color( 0xa0a0a0 );\n    // scene.fog = new THREE.Fog( 0xa0a0a0, 200, 1000 );\n\n    const hemiLight = new THREE.HemisphereLight( 0xffffff, 0x444444, 5 );\n    hemiLight.position.set( 0, 200, 0 );\n    scene.add( hemiLight );\n\n    const dirLight = new THREE.DirectionalLight( 0xffffff, 5 );\n    dirLight.position.set( 0, 200, 100 );\n    dirLight.castShadow = true;\n    dirLight.shadow.camera.top = 180;\n    dirLight.shadow.camera.bottom = - 100;\n    dirLight.shadow.camera.left = - 120;\n    dirLight.shadow.camera.right = 120;\n    scene.add( dirLight );\n\n    // ground\n    // const mesh = new THREE.Mesh( new THREE.PlaneGeometry( 2000, 2000 ), new THREE.MeshPhongMaterial( { color: 0x999999, depthWrite: false } ) );\n    // mesh.rotation.x = - Math.PI / 2;\n    // mesh.receiveShadow = true;\n    // scene.add( mesh );\n\n    loader = new FBXLoader( manager );\n    loadAsset( params.asset );\n\n    renderer = new THREE.WebGLRenderer( { antialias: true } );\n    renderer.setPixelRatio( window.devicePixelRatio );\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    renderer.setAnimationLoop( animate );\n    renderer.shadowMap.enabled = true;\n    container.appendChild( renderer.domElement );\n\n    controls = new OrbitControls( camera, renderer.domElement );\n    controls.target.set( 0, 100, 0 );\n    controls.update();\n    controls.enabled = customCameraControls\n\n\n\n    window.addEventListener( 'resize', onWindowResize );\n  }\n\n  function loadAsset( asset ) {\n\n    loader.load( 'models/FromThreeRepo/fbx/' + asset + '.fbx', function ( group ) {\n\n      if ( object ) {\n\n        object.traverse( function ( child ) {\n\n          if ( child.material ) {\n\n            const materials = Array.isArray( child.material ) ? child.material : [ child.material ];\n            materials.forEach( material => {\n\n              if ( material.map ) material.map.dispose();\n              material.dispose();\n\n            } );\n\n          }\n\n          if ( child.geometry ) child.geometry.dispose();\n\n        } );\n\n        scene.remove( object );\n\n      }\n\n      object = group;\n\n      object.__inspectorData.isInspectable = true;\n\n      if ( object.animations && object.animations.length ) {\n\n        mixer = new THREE.AnimationMixer( object );\n\n        const action = mixer.clipAction( object.animations[ 0 ] );\n        action.play();\n\n      } else {\n\n        mixer = null;\n\n      }\n\n      delete customParams.morphs;\n\n      object.traverse( function ( child ) {\n\n        if ( child.isMesh ) {\n\n          customParams.morphs = {};\n\n          child.castShadow = true;\n          child.receiveShadow = true;\n\n          if ( child.morphTargetDictionary ) {\n\n            customParams.morphs[child.name || child.uuid] = {}\n\n            Object.keys( child.morphTargetDictionary ).forEach( ( key ) => {\n              customParams.morphs[child.name || child.uuid][key] = {\n                object: child.morphTargetInfluences,\n                prop: child.morphTargetDictionary[ key ],\n                control: {\n                  label: key,\n                  min: 0,\n                  max: 1,\n                  onChange: (value) => {\n                    child.morphTargetInfluences[child.morphTargetDictionary[ key ]] = value;\n                  }\n                }\n              };\n            } );\n          }\n        }\n      } );\n\n      if (typeof updateInspector !== \"undefined\") {\n        updateInspector();\n      }\n\n      scene.add( object );\n\n    } );\n\n  }\n\n  function onWindowResize() {\n    perspectiveCamera.aspect = window.innerWidth / window.innerHeight;\n    perspectiveCamera.updateProjectionMatrix();\n\n    orthographicCamera.left = window.innerWidth / -2;\n    orthographicCamera.right = window.innerWidth / 2;\n    orthographicCamera.top = window.innerHeight / 2;\n    orthographicCamera.bottom = window.innerHeight / -2;\n    orthographicCamera.updateProjectionMatrix();\n\n    renderer.setSize( window.innerWidth, window.innerHeight );\n  }\n\n  // onRender sends in params while setAnimationLoop doesn't\n  function animate(_state, _delta) {\n    const delta = _delta ?? clock.getDelta();\n\n    if ( mixer ) mixer.update( delta );\n    renderer.render( scene, camera );\n  }\n\n  function r3fThreeGetSet({ r3fThreeGet, r3fThreeSet }) {\n    console.log({ r3fThreeGet: r3fThreeGet(), r3fThreeSet });\n  }\n\n  const customParams = {\n    asset: {\n      object: params,\n      prop: 'asset',\n      control: {\n        label: 'Asset',\n        options: assets.reduce((acc, asset) => {\n          acc[asset] = asset\n          return acc\n        }, {}),\n        onChange: loadAsset\n      }\n    }\n  };\n\n  // TODO: improve somehow to allow frameloop controlling from Inspector\n\n  let updateInspector = undefined;\n\n  setTimeout(() => {\n    // can be called multiple times with different options\n    const injectInspectorResult = injectInspector({\n      camera,\n      scene,\n      renderer,\n      frameloop: 'always',\n      autoNavControls: customCameraControls ? 'never' : 'whenStopped',\n      customParams,\n      showInspector: true,\n      showGizmos: true,\n      useTransformControls: true,\n      onPlay: () => {\n        // console.log('Play triggered');\n      },\n      onRender: () => {\n        // console.log('Render triggered');\n      },\n      onTransformControlsDragging: (dragging) => {\n        const enabled = controls.enabled;\n        controls.enabled = dragging ? false : enabled;\n      },\n      onPlayingStateChange: (playingState) => {\n        if (mixer) {\n          if (playingState === 'playing') {\n            mixer.timeScale = 1;\n          } else {\n            mixer.timeScale = 0;\n          }\n        }\n        controls.enabled = customCameraControls || playingState !== 'stopped';\n      },\n      // onRender: animate,\n      r3fThreeGetSet\n    });\n    updateInspector = injectInspectorResult.updateInspector;\n  }, 2000)\n\n\n"],"names":["api","projects","customCameraControls","manager","THREE.LoadingManager","camera","perspectiveCamera","orthographicCamera","scene","renderer","object","loader","controls","mixer","clock","THREE.Clock","params","assets","init","container","THREE.PerspectiveCamera","THREE.OrthographicCamera","event","updateInspector","THREE.Scene","THREE.Color","hemiLight","THREE.HemisphereLight","dirLight","THREE.DirectionalLight","FBXLoader","loadAsset","THREE.WebGLRenderer","animate","OrbitControls","onWindowResize","asset","group","child","material","THREE.AnimationMixer","customParams","key","value","_state","_delta","delta","r3fThreeGetSet","r3fThreeGet","r3fThreeSet","acc","injectInspector","dragging","enabled","playingState"],"mappings":"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"}